{"version":3,"sources":["Editor/consts.ts","Editor/decorators/ConnectEditorContext.tsx","Editor/decorators/ConnectContext.tsx","Editor/Icons/Icon.tsx","Editor/Icons/MoveToolIcon.tsx","Editor/Icons/TextIcon.tsx","Editor/Icons/OvalIcon.tsx","Editor/Icons/RectIcon.tsx","Editor/Icons/CircleIcon.tsx","Editor/Icons/PolygonIcon.tsx","Editor/Icons/CropIcon.tsx","Editor/Icons/RoundRectIcon.tsx","Editor/KeyManager/KeyManager.ts","Editor/Popup/Popup.tsx","Editor/Icons/KeyboardIcon.tsx","Editor/Menu/Menu.tsx","Editor/Viewport/Viewport.tsx","Editor/Tabs/Tab.tsx","Editor/Inputs/Input.tsx","Editor/Inputs/TextBox.tsx","Editor/Inputs/NumberBox.tsx","Editor/Inputs/TabInputBox.tsx","Editor/Inputs/Anchor.tsx","Editor/Icons/TransformIcon.tsx","Editor/Tabs/TransformTab.tsx","Editor/Tabs/Folder/Folder.tsx","Editor/Inputs/LabelBox.tsx","Editor/Tabs/Folder/File.tsx","Editor/Tabs/FrameTab/Property.tsx","Editor/Icons/FrameIcon.tsx","Editor/Tabs/FrameTab/FrameTab.tsx","Editor/Tabs/AlignTab/Align.tsx","Editor/Icons/AlignIcon.tsx","Editor/Tabs/AlignTab/AlignTab.tsx","Editor/Tabs/LayerTab/Layer.tsx","Editor/Icons/LayerIcon.tsx","Editor/Tabs/LayerTab/LayerTab.tsx","Editor/Inputs/ColorPicker.tsx","Editor/Inputs/ColorBox.tsx","Editor/Icons/ColorIcon.tsx","Editor/Tabs/ColorTab/ColorTab.tsx","Editor/Inputs/SelectBox.tsx","Editor/Icons/FontIcon.tsx","Editor/Tabs/FontTab/FontTab.tsx","Editor/Tabs/Tabs.tsx","Editor/utils/EventBus.ts","Editor/utils/Memory.ts","Editor/Viewport/ables/DimensionViewable.tsx","Editor/Viewport/ables/DeleteButtonViewable.tsx","Editor/Viewport/MoveableMananger.tsx","Editor/utils/MoveableData.ts","Editor/utils/HistoryManager.ts","Editor/utils/Debugger.ts","Editor/utils/ClipboardManager.tsx","Editor/Editor.tsx","Editor/utils/utils.tsx","demo/Moveable.tsx","index.tsx","Editor/index.ts"],"names":["EDITOR_PROPERTIES","PREFIX","DATA_SCENA_ELEMENT_ID","TYPE_SCENA_LAYERS","EDITOR_CSS","EditorContext","createContext","context","properties","connectEditorContext","Component","prototype","contextType","forEach","name","Object","defineProperty","get","this","set","Icon","keys","subContainer","React","onClick","props","selected","focusSub","onSelect","constructor","id","onSubClick","e","stopPropagation","blur","current","style","display","className","prefix","renderIcon","renderSubContainer","subIcons","renderSubIcons","length","key","ref","IconClass","isSelect","onSubSelect","camelize","keyManager","keydown","ctrlKey","metaKey","maker","makeThen","MoveToolIcon","viewBox","d","fill","strokeLinejoin","strokeWidth","stroke","transformOrigin","transform","TextIcon","memory","tag","attrs","contenteditable","color","target","focus","OvalIcon","cx","cy","rx","ry","RectIcon","CircleIcon","PolygonIcon","CropIcon","frame","getSelectedFrames","cropType","clipPath","splitBracket","renderSubIcon","moveableData","infos","removeProperties","historyManager","addAction","eventBus","requestTrigger","forceUpdate","RoundRectIcon","KeyManager","console","keycon","KeyController","keylist","isEnable","callback","description","addCallback","keyup","destroy","type","push","inputEvent","checkInput","check","log","join","altKey","shiftKey","Popup","overlayElement","popupKeyManager","onClose","children","disable","enable","KeyboardIcon","state","renderPopup","setState","ReactDOM","map","getEditorElement","MenuElement","styled","MENUS","Menu","menuRefs","select","renderMenus","MenuClass","i","filter","m","Viewport","components","jsxs","viewport","jsx","ids","viewportRef","onBlur","renderChildren","getViewportInfos","el","info","nextChildren","renderedChildren","isString","isScenaFunction","scenaElementId","scenaAttrs","scenaText","innerText","scenaHTML","innerHTML","jsxChildren","isArray","Math","floor","random","getInfo","parentChildren","scopeId","index","indexOf","getId","indexes","reduce","getInfoByElement","parentInfo","getIndexes","parentScopeId","makeId","jsxId","isScenaElement","elementInfo","registerChildren","componentId","setInfo","appendIndex","jsxInfos","splice","isNumber","Promise","resolve","added","updateElements","getElement","isChild","slice","unregisterChildren","getScenaAttrs","targets","removedChildren","getSortedTargets","getIndex","removed","indexesList","Array","sort","a","b","aLength","bLength","min","getSortedInfos","getSortedIndexesList","getInfoByIndexes","moved","prevInfo","getPrevInfo","isScenaFunctionElement","lastInfo","getLastChildInfo","move","rootInfo","container","nextInfos","moveMatrix","getOffsetOriginMatrix","prevInfos","parnetChildren","movedInfos","sortedInfos","moves","Tab","title","eventList","renderTab","on","moveableManager","getMoveable","off","icon","Input","input","value","updateValue","setValue","TextElement","TextBox","inputAttributes","onInput","ev","nativeEvent","isUndefined","data","onChange","onKeyDown","onKeyUp","currentTarget","getKey","keyCode","inputProps","NumberBox","step","pattern","TabInputElement","TabInputBox","label","InputType","v","getValue","AnchorElement","HORIZONTAL_DIRECTIONS","VERTICAL_DIRECTIONS","Anchor","origin","getAttribute","split","parseFloat","max","round","h","j","classNames","data-anchor-index","TransformIcon","x","y","width","height","TransformTab","xInput","yInput","wInput","hInput","oInput","rInput","onChangeRotate","rotate","request","isInstant","onChangePos","onChangeOrigin","rect","getRect","ow","offsetWidth","oh","offsetHeight","onChangeSize","onRender","left","top","rotation","addEvent","FolderElement","getCurrentFile","hasAttribute","parentElement","Folder","moveGesto","folderRef","shadowRef","fold","shadows","onClickFold","multiselect","nextSelected","global","onDragStart","hasClass","stop","getBoundingClientRect","datas","offsetX","clientX","folderRect","folderLine","objMap","flatMap","preventDefault","onDrag","folderElement","clientY","clearPointers","isTop","dragFirst","clickedTarget","fileInfos","updateShadowPosition","document","elementFromPoint","flatChildren","siblingIndex","findIndex","fullId","targetInfo","querySelector","nextInfo","targetDepth","depth","nextDepth","depthRange","distX","distDepth","between","contains","isMoveChildren","checkMove","prevScope","scope","parentScope","every","setProperty","classList","add","onDragEnd","isDrag","onMove","selectedInfos","abs","parentId","undefined","cssText","getFullId","isSelected","data-file-key","renderProperties","renderShadows","isMove","Gesto","window","unset","FileComponent","getName","getChildren","nextScope","isObject","fileScope","valueChildren","call","querySelectorAll","remove","defaultProps","_","LabelElement","LabelBox","File","Property","FrameIcon","FrameTab","renderProperty","orders","getOrders","selectedProperty","selectedIndex","prevIndex","setOrders","setTargets","Align","direction","AlignIcon","TYPES","DIRECTIONS","getDirectionPos","size","start","AlignTab","moveable","moveables","pos","child","getFrame","prev","subRect","subPos","delta","translate","t","next","renderFrames","updateRect","viewportPos","Layer","LayerIcon","LayerTab","renderFile","editor","getViewport","setSelectedTargets","getIds","getSelectedTargets","AnyChromePicker","ChromePicker","ColorPicker","rgb","r","g","onChangeComplete","ColorBoxElement","ColorBox","colorInput","textInput","onFocus","relatedTarget","tagName","backgroundColor","renderPicker","onMouseDown","onTouchStart","ColorIcon","ColorTab","onChangeBackgroundColor","onChangeTextColor","frames","backgroundColors","colors","SelectElement","SelectBox","options","FontIcon","FONT_FAMILY_PROPS","TEXT_ALIGN_PROPS","FONT_STYLE_PROPS","FONT_WEIGHT_PROPS","TEXT_DECORATION_PROPS","FontTab","changeProperty","onChangeAlign","onChangeFamily","onChangeStyle","onChangeWeight","onChangeDecoration","getProperties","family","align","weight","decoration","TabsElement","TABS","CurrentTab","Tabs","tabs","onMouseOver","prevSelected","onMouseOut","renderTabs","UserTab","IconComponent","data-target-id","EventBus","eventMap","params","cancelAnimationFrame","requestAnimationFrame","trigger","EventEmitter","Memory","Map","clear","DimensionViewable","dimensionViewable","Boolean","events","render","zoom","DelteButtonViewable","deleteButtonViewable","pos2","DeleteButton","useCSS","Consumer","removeElements","restoreRender","prevState","error","setOrderObject","result","diff","prevList","removeProperty","undoRender","prevOrders","redoRender","nextOrders","undoRenders","redoRenders","MoveableManager","verticalGuidelines","horizontalGuidelines","selectedTargets","selectedMenu","renderViewportMoveable","elementGuidelines","getTargets","isShift","ables","draggable","resizable","pinchable","throttleResize","clippable","passDragArea","throttleDragRotate","keepRatio","rotatable","snappable","snapCenter","snapGap","isDisplayInnerSnapDigit","roundable","clipArea","clipVerticalGuidelines","clipHorizontalGuidelines","clipTargetBounds","onBeforeRenderStart","onBeforeRenderGroupStart","onDragGroupStart","onDragGroup","onScaleStart","onScale","onScaleGroupStart","onScaleGroup","onResizeStart","onResize","onResizeGroupStart","onResizeGroup","onRotateStart","onRotate","onRotateGroupStart","onRotateGroup","defaultClipPath","onClip","onDragOriginStart","onDragOrigin","onRound","inputTarget","isDouble","isContentEditable","selectMenu","getContentElement","getSelecto","clickTarget","onClickGroup","onRenderStart","prevData","isRender","onRenderEnd","onRenderGroupStart","prevDatas","onRenderGroup","onRenderGroupEnd","registerType","MoveableData","createAuto","useBeforeRender","names","defaultValues","property","getOrderObject","MoveableHelper","HistoryManager","undoStack","redoStack","types","undo","redo","undoAction","pop","redoAction","Debugger","isDebug","args","ClipboardManager","onCut","onCopy","clipboardData","SavedScenaData","saveTargets","setData","JSON","stringify","onPaste","read","addEventListener","removeEventListener","execCommand","all","html2canvas","then","images","imageCanvas","parentRect","canvas","createElement","getContext","drawImage","toBlob","blob","navigator","clipboard","write","ClipboardItem","scenaDatas","parse","getData","loadDatas","readDataTransfter","clipboardItems","hasText","item","hasImage","getType","appendBlob","readText","text","appendJSXs","contentEditable","EditorElement","undoCreateElements","res","removeByIds","getElements","restoreElements","undoSelectTargets","prevs","nexts","redoSelectTargets","undoChangeText","redoChangeText","undoMove","redoMove","Editor","horizontalGuides","verticalGuides","debug","clipboardManager","infiniteViewer","selecto","menu","editorElement","onMenuChange","resize","parentTarget","getParnetScenaElement","nextText","Provider","horizontalSnapGuides","verticalSnapGuides","unit","scrollCenter","snapThreshold","snaps","displayDragPos","dragPosFormat","onChangeGuides","guides","usePinch","useForceWheel","pinchThreshold","checkBlur","nodeName","isMoveableElement","isDragging","some","onAbortPinch","triggerDragStart","onScroll","scroll","scrollLeft","scrollGuides","scrollTop","onPinch","getElementRect","getElementInfo","dragContainer","hitRate","selectableTargets","selectByClick","selectFromInside","toggleContinueSelect","scrollOptions","getContainer","threshold","throttleTime","getScrollPosition","getScrollLeft","getScrollTop","contentElement","isTrusted","scrollBy","onSelectEnd","isDragStart","selectEndMaker","dragStart","getAccurateAgent","agent","isMacintosh","os","moveInside","moveOutside","isRestore","parnetTarget","promiseState","indexesListLength","appendComplete","frameMap","removeFrame","frameOrder","childInfo","registerFrame","order","createFrame","removeFrames","selectedInfo","getNextInfo","removeTargets","selectedTarget","removeTarget","isUpdate","loadData","getJSX","getComponent","saveTarget","toLowerCase","url","URL","createObjectURL","appendJSX","src","alt","moveComplete","selectIcon","getSelected","position","deltaX","deltaY","activeElement","selection","getSelection","removeAllRanges","nextMatrix","invert","matrix3d","setMoveMatrix","checkImageLoaded","restoreFrames","prefixNames","val","els","complete","loaded","makeScenaFunctionComponent","component","scenaComponentId","attributes","isFunction","transformOrders","matrix","prevMatrix","splitComma","has","num","stack","targetOrigin","translation","fromTranslation","offsetMatrix","registerElement","setAttribute","Badge","data-scena-element-id","href","App","suppressContentEditableWarning","getElementById"],"mappings":"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","file":"static/js/main.4efc5ba5.chunk.js","sourcesContent":["import { createContext } from \"react\";\nimport Editor from \"./Editor\";\n\nexport const EDITOR_PROPERTIES = [\n    \"memory\",\n    \"eventBus\",\n    \"keyManager\",\n    \"moveableData\",\n    \"moveableManager\",\n    \"historyManager\",\n    \"console\",\n    \"getViewport\",\n    \"getSelecto\",\n    \"getEditorElement\",\n    \"getSelectedTargets\",\n    \"selectMenu\",\n    \"getSelectedFrames\",\n] as const;\nexport const PREFIX = \"scena-\";\nexport const DATA_SCENA_ELEMENT_ID = \"data-scena-element-id\";\nexport const DATA_SCENA_ELEMENT = \"data-scena-element\";\nexport const TYPE_SCENA_LAYERS = \"application/x-scena-layers\";\nexport const EDITOR_CSS = `\n@import url(\"https://fonts.googleapis.com/css?family=Open+Sans:300,400,600&display=swap\");\n\n{\n    position: relative;\n    width: 100%;\n    height: 100%;\n    font-family: sans-serif;\n    --mainColor: #4af;\n    --back1: #1a1a1a;\n    --back2: #2a2a2a;\n    --back3: #333;\n    --back4: #444;\n    --back5: #555;\n    --back6: #666;\n    transform-style: preserve-3d;\n\n    --menu: 45px;\n\n    --tabs: 40px;\n    --tab: 200px;\n}\n\n[class*=\"scena-\"] {\n    font-family: \"Open Sans\", sans-serif;\n}\n\n.scena-viewer {\n    position: absolute !important;\n    left: calc(30px + var(--menu));\n    top: 30px;\n    width: calc(100% - 30px - var(--menu) - var(--tabs));\n    height: calc(100% - 30px);\n}\n\n.scena-viewport-container {\n    position: relative;\n}\n.scena-viewport {\n    position: relative;\n    width: 100%;\n    height: 100%;\n    box-sizing: border-box;\n}\n.scena-viewport:before {\n    content: \"\";\n    position: absolute;\n    border: 1px solid #eee;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    pointer-events: none;\n}\n\n.scena-guides {\n    position: absolute !important;\n    top: 0;\n    left: 0;\n    transform: translateZ(1px);\n}\n\n.scena-guides.scena-horizontal {\n    left: calc(var(--menu) + 30px);\n    width: calc(100% - 30px - var(--menu) - var(--tabs));\n    height: 30px !important;\n}\n\n.scena-guides.scena-vertical {\n    top: 30px;\n    left: var(--menu);\n    height: calc(100% - 30px);\n    width: 30px !important;\n}\n\n.scena-reset {\n    position: absolute !important;\n    background: var(--back3);\n    width: 30px;\n    height: 30px;\n    z-index: 1;\n    border-right: 1px solid var(--back4);\n    border-bottom: 1px solid var(--back4);\n    box-sizing: border-box;\n    cursor: pointer;\n    left: var(--menu);\n    top: 0px;\n}\n\n.scena-overlay {\n    position: fixed;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    z-index: 100;\n    background: rgba(0, 0, 0, 0.2);\n}\n.moveable-dimension {\n    position: absolute;\n    background: var(--mainColor);\n    border-radius: 2px;\n    padding: 1px 3px;\n    color: white;\n    font-size: 13px;\n    white-space: nowrap;\n    font-weight: bold;\n    will-change: transform;\n    transform: translate(-50%) translateZ(0px);\n}\n.scena-frame-tab {\n    overflow: auto;\n    max-height: 300px;\n}\n\n.scena-overlay {\n    position: fixed;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    z-index: 100;\n    transform-style: preserve-3d;\n    transform: translateZ(15px);\n    background: rgba(0, 0, 0, 0.2);\n}\n\n.scena-popup {\n    position: absolute;\n    max-width: 600px;\n    width: 80%;\n    max-height: 1000px;\n    padding: 30px;\n    height: 80%;\n    overflow: auto;\n    left: 50%;\n    top: 50%;\n    transform: translate(-50%, -50%);\n    font-size: 14px;\n    background: var(--back3);\n    box-sizing: border-box;\n    color: #fff;\n}\n.scena-popup h2 {\n    padding: 0;\n    margin: 0;\n    padding: 4px;\n}\n.scena-popup .scena-close {\n    position: absolute;\n    top: 30px;\n    right: 30px;\n    width: 40px;\n    height: 40px;\n    cursor: pointer;\n}\n.scena-popup .scena-close:before, .scena-popup .scena-close:after {\n    content: \"\";\n    position: absolute;\n    width: 30px;\n    height: 1px;\n    background: #ddd;\n    top: 50%;\n    left: 50%;\n}\n.scena-popup .scena-close:hover:before, .scena-popup .scena-close:hover:after {\n    height: 2px;\n    background: #fff;\n    border-radius: 1px;\n}\n.scena-popup .scena-close:before {\n    transform: translate(-50%, -50%) rotate(45deg);\n}\n.scena-popup .scena-close:after {\n    transform: translate(-50%, -50%) rotate(-45deg);\n}\n.scena-popup ul {\n    list-style: none;\n    padding: 0;\n}\n.scena-popup li {\n    padding: 4px 10px;\n    border-bottom: 1px solid var(--back2);\n    font-weight: bold;;\n}\n.scena-popup li:hover {\n    background: #fff;\n    color: var(--back2);\n}\n.scena-popup p {\n    position: relative;\n    padding: 2px 0px;\n}\n.scena-popup strong {\n    position: absolute;\n    right: 0;\n    text-transform: uppercase;\n}\n.scena-popup strong span {\n    display: inline-block;\n    padding: 2px 4px;\n    border: 1px solid #fff;\n    vertical-align: top;\n    margin: 0px 5px;\n}\n\n.scena-align {\n    position: relative;\n    width: 25px;\n    height: 25px;\n    /* background: #f55; */\n    display: inline-block;\n    margin-right: 5px;\n}\n.scena-align:hover {\n    cursor: pointer;\n}\n.scena-align:hover * {\n    background: white;\n}\n.scena-align-line,\n.scena-align-element1,\n.scena-align-element2 {\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    background: var(--back6);\n    transform: translate(-50%, -50%);\n}\n.scena-align-vertical .scena-align-line {\n    width: 1px;\n    height: 18px;\n}\n.scena-align-vertical .scena-align-element1 {\n    width: 10px;\n    height: 5px;\n    margin-top: -3.5px;\n}\n.scena-align-vertical .scena-align-element2 {\n    width: 14px;\n    height: 5px;\n    margin-top: 3.5px;\n}\n.scena-align-vertical.scena-align-start .scena-align-line {\n    margin-left: -7px;\n}\n.scena-align-vertical.scena-align-start .scena-align-element1 {\n    margin-left: -2px;\n}\n\n.scena-align-vertical.scena-align-end .scena-align-line {\n    margin-left: 7px;\n}\n.scena-align-vertical.scena-align-end .scena-align-element1 {\n    margin-left: 2px;\n}\n\n\n\n.scena-align-horizontal .scena-align-line {\n    height: 1px;\n    width: 18px;\n}\n.scena-align-horizontal .scena-align-element1 {\n    height: 10px;\n    width: 5px;\n    margin-left: -3.5px;\n}\n.scena-align-horizontal .scena-align-element2 {\n    height: 14px;\n    width: 5px;\n    margin-left: 3.5px;\n}\n.scena-align-horizontal.scena-align-start .scena-align-line {\n    margin-top: -7px;\n}\n.scena-align-horizontal.scena-align-start .scena-align-element1 {\n    margin-top: -2px;\n}\n\n.scena-align-horizontal.scena-align-end .scena-align-line {\n    margin-top: 7px;\n}\n.scena-align-horizontal.scena-align-end .scena-align-element1 {\n    margin-top: 2px;\n}\n`;\n\nexport const EditorContext = createContext<Editor | null>(null);\n","import { EditorContext, EDITOR_PROPERTIES } from \"../consts\";\nimport { connectContext } from \"./ConnectContext\";\n\nexport const connectEditorContext = connectContext(EditorContext, EDITOR_PROPERTIES);\n","import * as React from \"react\";\n\nexport function connectContext(context: React.Context<any>, properties: readonly string[]) {\n    return function (Component: any) {\n        const prototype = Component.prototype;\n\n        Component.contextType = context;\n\n        properties.forEach(name => {\n            Object.defineProperty(prototype, name, {\n                get: function () {\n                    return this.context[name];\n                },\n                set: function () {\n                    this.context[name](name);\n                }\n            });\n        });\n    }\n};\n","import * as React from \"react\";\nimport { prefix } from \"../utils/utils\";\nimport { IObject, camelize } from \"@daybrush/utils\";\nimport Memory from \"../utils/Memory\";\nimport { EditorInterface } from \"../types\";\nimport Editor from \"../index.umd\";\nimport { connectEditorContext } from \"../decorators/ConnectEditorContext\";\n\n\nexport interface Maker {\n    tag: string,\n    attrs: IObject<any>,\n    style: IObject<any>,\n}\n\n@connectEditorContext\nexport default abstract class Icon extends React.PureComponent<{\n    selected?: boolean,\n    onSelect?: (id: string) => any;\n}> {\n    public static id: string;\n    public static maker?: (memory: Memory) => Maker;\n    public static makeThen: (target: HTMLElement | SVGElement) => any = () => { };\n    public keys: string[] = [];\n    public abstract renderIcon(): any;\n    private subContainer = React.createRef<HTMLDivElement>();\n    public render() {\n        return (\n            <div className={prefix(\"icon\", this.props.selected ? \"selected\" : \"\")}\n                onClick={this.onClick}>\n                {this.renderIcon()}\n                {this.renderSubContainer()}\n            </div>\n        );\n    }\n    public renderSubContainer() {\n        const subIcons = this.renderSubIcons();\n\n        if (!subIcons.length) {\n            return;\n        }\n        return [\n            <div key={\"extends-icon\"} className={prefix(\"extends-icon\")}></div>,\n            this.props.selected && <div key={\"extends-container\"}\n                className={prefix(\"extends-container\")} ref={this.subContainer}\n                onClick={this.onSubClick}\n            >\n                {subIcons}\n            </div>,\n        ];\n    }\n    public renderSubIcons(): any[] {\n        return [];\n    }\n    public renderSubIcon(IconClass: typeof Icon, id: string, isSelect: boolean) {\n        return <div key={id} className={prefix(\"icon\", \"sub-icon\", isSelect ? \"selected\" : \"\")} onClick={() => {\n            this.onSubSelect!(id);\n        }}>\n            <IconClass selected={false} />\n            <div className={prefix(\"sub-icon-label\")}>\n                {camelize(` ${id}`)}\n            </div>\n        </div>;\n    }\n    public onClick = () => {\n        if (this.props.selected) {\n            this.focusSub();\n        }\n        const onSelect = this.props.onSelect;\n\n        if (onSelect) {\n            onSelect((this.constructor as any).id);\n        }\n    }\n    public onSubClick = (e: any) => {\n        e.stopPropagation();\n    }\n    public focusSub() {\n        const subContainer = this.subContainer.current;\n        if (!subContainer) {\n            return;\n        }\n\n        if (subContainer.style.display === \"block\") {\n            subContainer.style.display = \"none\";\n        } else {\n            subContainer.style.display = \"block\";\n        }\n    }\n    public blur = () => {\n        const subContainer = this.subContainer.current;\n        if (!subContainer) {\n            return;\n        }\n\n        subContainer.style.display = \"none\";\n    }\n    public onSubSelect(id: string) { }\n    public componentDidMount() {\n        const keys = this.keys;\n        if (keys.length) {\n            this.keyManager.keydown(keys, e => {\n                if (e.ctrlKey || e.metaKey) {\n                    return false;\n                }\n                this.onClick();\n            }, (this.constructor as any).id);\n        }\n    }\n}\n\nexport default interface Icon extends EditorInterface {\n    context: Editor;\n}\n","import * as React from \"react\";\nimport Icon from \"./Icon\";\n\nexport default class MoveToolIcon extends Icon {\n    public static id = \"MoveTool\";\n    public keys = [\"v\"];\n    public renderIcon() {\n        return (\n            <svg viewBox=\"0 0 80 80\">\n                <path\n                    d=\"M 21,21 L 35,60 L 40,44 L 54,58 A 3,3 0,0,0, 58,54 L 44,40 L 60,35 L 21,21Z\"\n                    fill=\"#222\" strokeLinejoin=\"round\"\n                    strokeWidth=\"3\" stroke=\"#eee\"\n                    style={{ transformOrigin: \"42px 42px\", transform: \"rotate(10deg)\" }} />\n            </svg>\n        );\n    }\n}\n","import * as React from \"react\";\nimport Icon from \"./Icon\";\nimport Memory from \"../utils/Memory\";\n\nexport default class TextIcon extends Icon {\n    public static id = \"Text\";\n    public keys = [\"t\"];\n    public static maker = (memory: Memory) => ({\n        tag: \"div\",\n        attrs: {\n            contenteditable: true,\n        },\n        style: {\n            color: memory.get(\"color\"),\n        },\n    });\n    public static makeThen = (target: HTMLElement | SVGElement) => {\n        target.focus();\n    };\n    public renderIcon() {\n        return (\n            <svg viewBox=\"0 0 80 80\">\n                <g transform=\"matrix(0.987601,0,0,0.987601,-1.97306,0.554734)\">\n                    <path\n                        // tslint:disable-next-line: max-line-length\n                        d=\"M64.286,17.81L20.714,17.81L20.714,29.56L29.214,23L39.262,23L39.262,55.476L27.77,61.262L27.77,62.071L57.23,62.071L57.23,61.262L45.738,55.476L45.738,23L55.786,23L64.286,29.56L64.286,17.81Z\"\n                        style={{ fill: \"white\" }} />\n                </g>\n            </svg>\n        );\n    }\n}\n","import * as React from \"react\";\nimport Icon from \"./Icon\";\nimport Memory from \"../utils/Memory\";\n\nexport default class OvalIcon extends Icon {\n    public static id = \"Oval\";\n    public static maker = (memory: Memory) => ({\n        tag: \"div\",\n        attrs: {},\n        style: {\n            \"background-color\": memory.get(\"background-color\"),\n            \"border-radius\": \"50%\",\n        },\n    });\n    public renderIcon() {\n        return (\n            <svg viewBox=\"0 0 73 73\">\n                <ellipse fill=\"#555\" cx=\"36.5\" cy=\"36.5\" rx=\"20\" ry=\"15\"\n                    strokeLinejoin=\"round\" strokeWidth=\"3\" stroke=\"#fff\"></ellipse></svg>\n        );\n    }\n}\n","import * as React from \"react\";\nimport Icon from \"./Icon\";\nimport Memory from \"../utils/Memory\";\n\nexport default class RectIcon extends Icon {\n    public static id = \"Rect\";\n    public static maker = (memory: Memory) => ({\n        tag: \"div\",\n        attrs: {},\n        style: {\n            \"background-color\": memory.get(\"background-color\"),\n        },\n    });\n    public renderIcon() {\n        return (\n            <svg viewBox=\"0 0 73 73\">\n                <path d=\"M16.5,21.5 h40 a0,0 0 0 1 0,0 v30 a0,0 0 0 1 -0,0 h-40 a0,0 0 0 1 -0,-0 v-30 a0,0 0 0 1 0,-0 z\"\n                    fill=\"#555\" strokeLinejoin=\"round\" strokeWidth=\"3\" stroke=\"#fff\"></path>\n            </svg>\n        );\n    }\n}\n","import * as React from \"react\";\nimport Icon from \"./Icon\";\nimport Memory from \"../utils/Memory\";\n\nexport default class CircleIcon extends Icon {\n    public static id = \"Circle\";\n    public static maker = (memory: Memory) => ({\n        tag: \"div\",\n        attrs: {},\n        style: {\n            \"background-color\": memory.get(\"background-color\"),\n            \"border-radius\": \"50%\",\n        },\n    });\n    public renderIcon() {\n        return (\n            <svg viewBox=\"0 0 73 73\">\n                <ellipse fill=\"#555\" cx=\"36.5\" cy=\"36.5\" rx=\"15\" ry=\"15\"\n                    strokeLinejoin=\"round\" strokeWidth=\"3\" stroke=\"#fff\"></ellipse></svg>\n        );\n    }\n}\n","import * as React from \"react\";\nimport Icon from \"./Icon\";\n\nexport default class PolygonIcon extends Icon {\n    public static id = \"Polygon\";\n    public renderIcon() {\n        return (\n            <svg viewBox=\"0 0 73 73\">\n                <path d=\"M 20,15 L 10,35 L 20,55 L 35,45 L 40, 50 L 55,31 L 41,15 L 30, 25 Z\"\n                    fill=\"#555\" strokeLinejoin=\"round\" strokeWidth=\"3\" stroke=\"#fff\"></path>\n            </svg>\n        );\n    }\n}\n","import * as React from \"react\";\nimport Icon from \"./Icon\";\nimport { splitBracket } from \"@daybrush/utils\";\nimport OvalIcon from \"./OvalIcon\";\nimport RectIcon from \"./RectIcon\";\nimport CircleIcon from \"./CircleIcon\";\nimport PolygonIcon from \"./PolygonIcon\";\n\nexport default class CropIcon extends Icon {\n    public static id = \"Crop\";\n    public keys = [\"c\"];\n    public renderIcon() {\n        return (\n            <svg viewBox=\"0 0 80 80\">\n                <path\n                    // tslint:disable-next-line: max-line-length\n                    d=\"M25,10L25,50L65,50   M10,25L50,25L50,65\"\n                    style={{ stroke: \"white\", strokeWidth: 5, fill: \"none\" }} />\n            </svg>\n        );\n    }\n    public renderSubIcons() {\n        const frame = this.getSelectedFrames()[0];\n        let cropType = this.memory.get(\"crop\") || \"inset\";\n\n        if (frame) {\n            const clipPath = frame.get(\"clip-path\") || frame.get(\"clip\");\n\n            if (clipPath) {\n                cropType = splitBracket(clipPath).prefix!;\n            }\n        }\n        return [\n            this.renderSubIcon(RectIcon, \"inset\", cropType === \"inset\"),\n            this.renderSubIcon(RectIcon, \"rect\", cropType === \"rect\"),\n            this.renderSubIcon(CircleIcon, \"circle\", cropType === \"circle\"),\n            this.renderSubIcon(OvalIcon, \"ellipse\", cropType === \"ellipse\"),\n            this.renderSubIcon(PolygonIcon, \"polygon\", cropType === \"polygon\"),\n        ];\n    }\n    public onSubSelect(id: string) {\n        const moveableData = this.moveableData;\n        const frame = moveableData.getSelectedFrames()[0];\n\n        if (frame) {\n            const clipPath = frame.get(\"clip-path\") || frame.get(\"clip\");\n\n            if (clipPath) {\n                const cropType = splitBracket(clipPath).prefix!;\n\n                if (id !== cropType) {\n                    const infos = moveableData.removeProperties(\"clip-path\", \"clip\");\n\n                    this.historyManager.addAction(\"renders\", { infos });\n                }\n            }\n        }\n\n        this.memory.set(\"crop\", id);\n        this.eventBus.requestTrigger(\"update\");\n\n        this.forceUpdate();\n    }\n}\n","import * as React from \"react\";\nimport Icon from \"./Icon\";\nimport Memory from \"../utils/Memory\";\n\nexport default class RoundRectIcon extends Icon {\n    public static id = \"RoundRect\";\n    public static maker = (memory: Memory) => ({\n        tag: \"div\",\n        attrs: {},\n        style: {\n            \"background-color\": memory.get(\"background-color\"),\n            \"border-radius\": \"10px\",\n        },\n    });\n    public renderIcon() {\n        return (\n            <svg viewBox=\"0 0 73 73\">\n                <path d=\"M26.5,21.5 h20 a10,10 0 0 1 10,10 v10 a10,10 0 0 1 -10,10 h-20 a10,10 0 0 1 -10,-10 v-10 a10,10 0 0 1 10,-10 z\"\n                    fill=\"#555\" strokeLinejoin=\"round\" strokeWidth=\"3\" stroke=\"#fff\"></path>\n            </svg>\n        );\n    }\n}\n","import KeyController from \"keycon\";\nimport Debugger from \"../utils/Debugger\";\nimport { checkInput } from \"../utils/utils\";\n\nfunction check(e: any) {\n    const inputEvent = e.inputEvent;\n    const target = inputEvent.target;\n\n    if (checkInput(target)) {\n        return false;\n    }\n    return true;\n}\nexport default class KeyManager {\n    constructor(private console: Debugger) { }\n    public keycon = new KeyController();\n    public keylist: Array<[string[], string]> = [];\n    public isEnable = true;\n\n    public enable() {\n        this.isEnable = true;\n    }\n    public disable() {\n        this.isEnable = false;\n    }\n    public keydown(keys: string[], callback: (e: any) => any, description?: any) {\n        this.keycon.keydown(keys, this.addCallback(\"keydown\", keys, callback, description));\n    }\n    public keyup(keys: string[], callback: (e: any) => any, description?: any) {\n        this.keycon.keyup(keys, this.addCallback(\"keyup\", keys, callback, description));\n    }\n    get altKey() {\n        return this.keycon.altKey;\n    }\n    get shiftKey() {\n        return this.keycon.shiftKey;\n    }\n    get metaKey() {\n        return this.keycon.metaKey;\n    }\n    get ctrlKey() {\n        return this.keycon.ctrlKey;\n    }\n    public destroy() {\n        this.keycon.destroy();\n    }\n    private addCallback(type: string, keys: string[], callback: (e: any) => any, description?: string) {\n        if (description) {\n            this.keylist.push([\n                keys,\n                description,\n            ]);\n        }\n        return (e: any) => {\n            if (!this.isEnable || !check(e)) {\n                return false;\n            }\n            const result = callback(e);\n\n            if (result !== false && description) {\n                this.console.log(`${type}: ${keys.join(\" + \")}`, description);\n            }\n        };\n    }\n}\n","import * as React from \"react\";\nimport { prefix } from \"../utils/utils\";\nimport { EditorInterface } from \"../types\";\nimport KeyManager from \"../KeyManager/KeyManager\";\nimport { connectEditorContext } from \"../decorators/ConnectEditorContext\";\n\n@connectEditorContext\nexport default class Popup extends React.PureComponent<{\n    onClose: () => any,\n}> {\n    public overlayElement = React.createRef<HTMLDivElement>();\n    public popupKeyManager = new KeyManager(this.console);\n    public render() {\n        return <div ref={this.overlayElement} className={prefix(\"overlay\")} onClick={this.onClick}>\n            <div className={prefix(\"popup\")}>\n                <div className={prefix(\"close\")} onClick={this.props.onClose}></div>\n                {this.props.children}\n            </div>\n        </div>;\n    }\n    public componentDidMount() {\n        this.keyManager.disable();\n        this.popupKeyManager.keyup([\"esc\"], () => {\n            this.props.onClose();\n        });\n    }\n    public componentWillUnmount() {\n        this.keyManager.enable();\n        this.popupKeyManager.destroy();\n    }\n    public onClick = (e: any) => {\n        e.stopPropagation();\n        if (e.target === this.overlayElement.current) {\n            this.props.onClose();\n        }\n    }\n}\n\n\nexport default interface Popup extends EditorInterface {}\n","import * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport Icon from \"./Icon\";\nimport { prefix } from \"../utils/utils\";\nimport Popup from \"../Popup/Popup\";\n\nexport default class KeyboardIcon extends Icon {\n    public static id = \"Shortcuts\";\n    public keys = [\"s\"];\n    public state = {\n        renderPopup: false,\n    }\n    public renderIcon() {\n        return (\n            <div className={prefix(\"i\")}>\n                <div className={prefix(\"keyboard\")}>\n                    <div className={prefix(\"key\")}></div>\n                    <div className={prefix(\"key\")}></div>\n                    <div className={prefix(\"key\")}></div>\n                    <div className={prefix(\"key\")}></div>\n                    <div className={prefix(\"key\")}></div>\n                    <div className={prefix(\"key\")}></div>\n                    <div className={prefix(\"key\")}></div>\n                    <div className={prefix(\"space\")}></div>\n                </div>\n                {this.state.renderPopup && this.renderPopup()}\n            </div>\n        );\n    }\n    public renderPopup() {\n        return ReactDOM.createPortal(<Popup onClose={this.onClose}>\n            <h2>Shortcuts</h2>\n            <ul className={prefix(\"key-list\")}>\n                {this.keyManager.keylist.map(([keys, description]) => {\n                    return <li key={keys.join(\"+\")}>\n                        <p className={prefix(\"key-description\")}>{description} <strong>{keys.map(key => <span key={key}>{key}</span>)}</strong></p>\n                    </li>\n                })}\n            </ul>\n        </Popup>, this.getEditorElement());\n    }\n    public onClick = () => {\n        this.setState({\n            renderPopup: true,\n        })\n    }\n    public onClose = () => {\n        this.setState({\n            renderPopup: false,\n        })\n    }\n}\n","import * as React from \"react\";\nimport { prefix } from \"../utils/utils\";\nimport Icon from \"../Icons/Icon\";\nimport MoveToolIcon from \"../Icons/MoveToolIcon\";\nimport TextIcon from \"../Icons/TextIcon\";\nimport CropIcon from \"../Icons/CropIcon\";\nimport RectIcon from \"../Icons/RectIcon\";\nimport OvalIcon from \"../Icons/OvalIcon\";\nimport RoundRectIcon from \"../Icons/RoundRectIcon\";\nimport KeyboardIcon from \"../Icons/KeyboardIcon\";\nimport styled from \"react-css-styled\";\n\nconst MenuElement = styled(\"div\", `\n{\n    position: absolute;\n    top: 0;\n    width: var(--menu);\n    height: 100%;\n    background: var(--back2);\n    box-sizing: border-box;\n    padding: 15px 7px 0px;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n}\n\n.scena-menu-bottom {\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    padding: 15px 7px 0px;\n    width: 100%;\n    box-sizing: border-box;\n}\n\nsvg, .scena-i {\n    pointer-events: none;\n}\n\n.scena-icon {\n    position: relative;\n    display: block;\n    font-size: 0;\n    padding: 3px;\n    box-sizing: border-box;\n    cursor: pointer;\n    border: 1px solid transparent;\n    margin-bottom: 5px;\n    border-radius: 3px;\n    transition: all ease 0.2s;\n}\n\n.scena-selected {\n    background: var(--mainColor);\n    border-color: var(--back1);\n}\n\n.scena-icon.scena-selected>svg path,\n.scena-icon.scena-selected>svg ellipse,\n.scena-sub-icon.scena-selected path,\n.scena-sub-icon.scena-selected ellipse {\n    fill: #fff;\n    stroke: #fff;\n}\n\n.scena-icon .scena-extends-icon {\n    position: absolute;\n    right: 2px;\n    bottom: 2px;\n    border-bottom: 5px solid #eee;\n    border-right: 0;\n    border-left: 5px solid transparent;\n}\n\n.scena-extends-container {\n    position: absolute;\n    left: 110%;\n    top: -30px;\n    background: var(--back2);\n    /* width: 200px;\n    height: 200px; */\n    border-radius: 5px;\n    z-index: 1;\n    transform: translate(10px) translateZ(2px);\n    box-shadow: 1px 1px 2px var(--back1);\n    display: none;\n}\n\n.scena-sub-icon {\n    white-space: nowrap;\n    padding: 0px 7px;\n    margin: 7px 10px;\n}\n\n.scena-sub-icon .scena-icon {\n    position: relative;\n    display: inline-block;\n    vertical-align: middle;\n    width: 25px;\n    height: 25px;\n    margin: 0;\n}\n\n.scena-sub-icon-label {\n    position: relative;\n    display: inline-block;\n    vertical-align: middle;\n    color: white;\n    font-size: 14px;\n    font-weight: bold;\n    padding: 0;\n    margin: 0;\n    margin-left: 5px;\n}\n\n\n.scena-keyboard {\n    background: #fff;\n    border-radius: 3px;\n    width: 90%;\n    height: 15px;\n    margin: 3px 0px 7px;\n    text-align: center;\n    box-sizing: border-box;\n    padding: 2px;\n}\n\n.scena-key {\n    display: inline-block;\n    width: 2px;\n    height: 2px;\n    background: var(--back2);\n    margin: 1px;\n}\n.scena-space {\n    display: inline-block;\n    width: 12px;\n    height: 2px;\n    background: var(--back2);\n    margin: 1px;\n    border-radius: 1px;\n}\n`);\nconst MENUS: Array<typeof Icon> = [\n    MoveToolIcon,\n    TextIcon,\n    CropIcon,\n    RectIcon,\n    RoundRectIcon,\n    OvalIcon,\n];\nexport default class Menu extends React.PureComponent<{\n    onSelect: (id: string) => any\n}> {\n    public state = {\n        selected: \"MoveTool\",\n    };\n    public menuRefs: Array<React.RefObject<Icon>> = [];\n    public render() {\n        return (\n            <MenuElement className={prefix(\"menu\")}>\n                {this.renderMenus()}\n                <div className={prefix(\"menu-bottom\")}>\n                    <KeyboardIcon />\n                </div>\n            </MenuElement>\n        );\n    }\n    public renderMenus() {\n        const selected = this.state.selected;\n        const menuRefs = this.menuRefs;\n\n        return MENUS.map((MenuClass, i) => {\n            const id = MenuClass.id;\n            if (!menuRefs[i]) {\n                menuRefs[i] = React.createRef();\n            }\n            return <MenuClass ref={menuRefs[i]} key={id} selected={selected === id} onSelect={this.select} />;\n        });\n    }\n    public select = (id: string) => {\n        this.setState({\n            selected: id,\n        });\n        this.props.onSelect(id);\n    }\n    public getSelected(): typeof Icon | undefined {\n        const selected = this.state.selected;\n        return MENUS.filter(m => m.id === selected)[0];\n    }\n    public blur() {\n        this.menuRefs.forEach(ref => {\n            if (!ref.current) {\n                return;\n            }\n            ref.current.blur();\n        });\n    }\n}\n","import * as React from \"react\";\nimport { IObject, isString, isArray, isNumber } from \"@daybrush/utils\";\nimport { prefix, getId, getScenaAttrs, isScenaFunction, isScenaElement, isScenaFunctionElement, getOffsetOriginMatrix, updateElements } from \"../utils/utils\";\nimport { DATA_SCENA_ELEMENT_ID } from \"../consts\";\nimport { ScenaJSXElement, ScenaComponent, ElementInfo, AddedInfo, RemovedInfo, MovedResult } from \"../types\";\n\nexport default class Viewport extends React.PureComponent<{\n    style: IObject<any>,\n    onBlur: (e: any) => any,\n}> {\n    public components: IObject<ScenaComponent> = {};\n    public jsxs: IObject<ScenaJSXElement> = {};\n    public viewport: ElementInfo = {\n        jsx: <div></div>,\n        name: \"Viewport\",\n        id: \"viewport\",\n        children: [],\n    };\n    public ids: IObject<ElementInfo> = {\n        viewport: this.viewport,\n    };\n    public state = {};\n    public viewportRef = React.createRef<HTMLDivElement>();\n    public render() {\n        const style = this.props.style;\n\n        return <div className={prefix(\"viewport-container\")} onBlur={this.props.onBlur} style={style}>\n            {this.props.children}\n            <div className={prefix(\"viewport\")} {...{ [DATA_SCENA_ELEMENT_ID]: \"viewport\" }} ref={this.viewportRef}>\n                {this.renderChildren(this.getViewportInfos())}\n            </div>\n        </div>;\n    }\n    public componentDidMount() {\n        this.ids.viewport.el = this.viewportRef.current!;\n    }\n    public renderChildren(children: ElementInfo[]): ScenaJSXElement[] {\n        return children.map(info => {\n            const jsx = info.jsx;\n            const nextChildren = info.children!;\n            const renderedChildren = this.renderChildren(nextChildren);\n            const id = info.id!;\n            const props: IObject<any> = {\n                key: id,\n            };\n            if (isString(jsx)) {\n                props[DATA_SCENA_ELEMENT_ID] = id;\n                return React.createElement(jsx, props, ...renderedChildren) as ScenaJSXElement;\n            } else if (isScenaFunction(jsx)) {\n                props.scenaElementId = id;\n                props.scenaAttrs = info.attrs || {};\n                props.scenaText = info.innerText;\n                props.scenaHTML = info.innerHTML;\n\n                return React.createElement(jsx, props) as ScenaJSXElement;\n            } else if (isString(jsx.type)) {\n                props[DATA_SCENA_ELEMENT_ID] = id;\n            } else {\n                props.scenaElementId = id;\n                props.scenaAttrs = info.attrs || {};\n                props.scenaText = info.innerText;\n                props.scenaHTML = info.innerHTML;\n            }\n            const jsxChildren = jsx.props.children;\n            return React.cloneElement(jsx, { ...jsx.props, ...props },\n                ...(isArray(jsxChildren) ? jsxChildren : [jsxChildren]),\n                ...this.renderChildren(nextChildren),\n            ) as ScenaJSXElement;\n        });\n    }\n    public getJSX(id: string) {\n        return this.jsxs[id];\n    }\n    public getComponent(id: string) {\n        return this.components[id];\n    }\n\n    public makeId(ids: IObject<any> = this.ids) {\n\n        while (true) {\n            const id = `scena${Math.floor(Math.random() * 100000000)}`;\n\n            if (ids[id]) {\n                continue;\n            }\n            return id;\n        }\n    }\n    public setInfo(id: string, info: ElementInfo) {\n        const ids = this.ids;\n\n        ids[id] = info;\n    }\n    public getInfo(id: string) {\n        return this.ids[id];\n    }\n\n    public getLastChildInfo(id: string) {\n        const info = this.getInfo(id);\n        const children = info.children!;\n\n        return children[children.length - 1];\n    }\n    public getNextInfo(id: string) {\n        const info = this.getInfo(id);\n        const parentInfo = this.getInfo(info.scopeId!)!;\n        const parentChildren = parentInfo.children!;\n        const index = parentChildren.indexOf(info);\n\n        return parentChildren[index + 1];\n    }\n    public getPrevInfo(id: string) {\n        const info = this.getInfo(id);\n        const parentInfo = this.getInfo(info.scopeId!)!;\n        const parentChildren = parentInfo.children!;\n        const index = parentChildren.indexOf(info);\n\n        return parentChildren[index - 1];\n    }\n    public getInfoByElement(el: HTMLElement | SVGElement) {\n        return this.ids[getId(el)];\n    }\n    public getInfoByIndexes(indexes: number[]) {\n        return indexes.reduce((info: ElementInfo, index: number) => {\n            return info.children![index];\n        }, this.viewport);\n    }\n    public getElement(id: string) {\n        const info = this.getInfo(id);\n\n        return info ? info.el : null;\n    }\n    public getViewportInfos() {\n        return this.viewport.children!;\n    }\n    public getIndexes(target: HTMLElement | SVGElement | string): number[] {\n        const info = (isString(target) ? this.getInfo(target) : this.getInfoByElement(target))!;\n\n        if (!info.scopeId) {\n            return [];\n        }\n        const parentInfo = this.getInfo(info.scopeId)!;\n\n        return [...this.getIndexes(info.scopeId), parentInfo.children!.indexOf(info)];\n    }\n    public registerChildren(jsxs: ElementInfo[], parentScopeId?: string) {\n        return jsxs.map(info => {\n            const id = info.id || this.makeId();\n            const jsx = info.jsx;\n            const children = info.children || [];\n            const scopeId = parentScopeId || info.scopeId || \"viewport\";\n            let componentId = \"\";\n            let jsxId = \"\";\n\n\n            if (isScenaElement(jsx)) {\n                jsxId = this.makeId(this.jsxs);\n\n                this.jsxs[jsxId] = jsx;\n                // const component = jsx.type;\n                // componentId = component.scenaComponentId;\n                // this.components[componentId] = component;\n            }\n            const elementInfo: ElementInfo = {\n                ...info,\n                jsx,\n                children: this.registerChildren(children, id),\n                scopeId,\n                componentId,\n                jsxId,\n                frame: info.frame || {},\n                el: null,\n                id,\n            };\n            this.setInfo(id, elementInfo);\n            return elementInfo;\n        });\n    }\n    public appendJSXs(jsxs: ElementInfo[], appendIndex: number, scopeId?: string): Promise<AddedInfo> {\n        const jsxInfos = this.registerChildren(jsxs, scopeId);\n\n        jsxInfos.forEach((info, i) => {\n            const scopeInfo = this.getInfo(scopeId || info.scopeId!);\n            const children = scopeInfo.children!;\n\n            if (appendIndex > -1) {\n                children.splice(appendIndex + i, 0, info);\n                info.index = appendIndex + i;\n            } else if (isNumber(info.index)) {\n                children.splice(info.index, 0, info);\n            } else {\n                info.index = children.length;\n                children.push(info);\n            }\n        });\n\n        return new Promise(resolve => {\n            this.forceUpdate(() => {\n                resolve({\n                    added: updateElements(jsxInfos),\n                });\n            });\n        });\n    }\n    public getIndex(id: string | HTMLElement) {\n        const indexes = this.getIndexes(id);\n        const length = indexes.length;\n        return length ? indexes[length - 1] : -1;\n    }\n    public getElements(ids: string[]) {\n        return ids.map(id => this.getElement(id)).filter(el => el) as Array<HTMLElement | SVGElement>;\n    }\n    public unregisterChildren(children: ElementInfo[], isChild?: boolean): ElementInfo[] {\n        const ids = this.ids;\n\n        return children.slice(0).map(info => {\n            const target = info.el!;\n            let innerText = \"\";\n            let innerHTML = \"\";\n\n            if (info.attrs!.contenteditable) {\n                innerText = (target as HTMLElement).innerText;\n            } else {\n                innerHTML = target.innerHTML;\n            }\n\n            if (!isChild) {\n                const parentInfo = this.getInfo(info.scopeId!);\n                const parentChildren = parentInfo.children!;\n                const index = parentChildren.indexOf(info);\n                parentInfo.children!.splice(index, 1);\n            }\n            const nextChildren = this.unregisterChildren(info.children!, true);\n\n            delete ids[info.id!];\n            delete info.el;\n\n            return {\n                ...info,\n                innerText,\n                innerHTML,\n                attrs: getScenaAttrs(target),\n                children: nextChildren,\n            };\n        });\n    }\n    public removeTargets(targets: Array<HTMLElement | SVGElement>): Promise<RemovedInfo> {\n        const removedChildren = this.getSortedTargets(targets).map(target => {\n            return this.getInfoByElement(target);\n        }).filter(info => info) as ElementInfo[];\n        const indexes = removedChildren.map(info => this.getIndex(info.id!));\n        const removed = this.unregisterChildren(removedChildren);\n\n        removed.forEach((info, i) => {\n            info.index = indexes[i];\n        })\n        return new Promise(resolve => {\n            this.forceUpdate(() => {\n                resolve({\n                    removed,\n                });\n            })\n        });\n    }\n    public getSortedIndexesList(targets: Array<string | HTMLElement | SVGElement | number[]>) {\n        const indexesList = targets.map(target => {\n            if (Array.isArray(target)) {\n                return target;\n            }\n            return this.getIndexes(target!)\n        });\n\n        indexesList.sort((a, b) => {\n            const aLength = a.length;\n            const bLength = b.length;\n            const length = Math.min(aLength, bLength);\n\n            for (let i = 0; i < length; ++i) {\n                if (a[i] === b[i]) {\n                    continue;\n                }\n                return a[i] - b[i];\n            }\n            return aLength - bLength;\n        });\n\n        return indexesList;\n    }\n    public getSortedTargets(targets: Array<string | HTMLElement | SVGElement>) {\n        return this.getSortedInfos(targets).map(info => info.el!);\n    }\n    public getSortedInfos(targets: Array<string | HTMLElement | SVGElement>) {\n        const indexesList = this.getSortedIndexesList(targets);\n\n        return indexesList.map(indexes => this.getInfoByIndexes(indexes));\n    }\n    public moveInside(target: HTMLElement | SVGElement | string): Promise<MovedResult> {\n        const info = isString(target) ? this.getInfo(target)! : this.getInfoByElement(target)!;\n\n        const prevInfo = this.getPrevInfo(info.id!);\n\n        let moved: ElementInfo[];\n\n        if (!prevInfo || isScenaFunction(prevInfo.jsx) || isScenaFunctionElement(prevInfo.jsx)) {\n            moved = [];\n        } else {\n            moved = [info];\n        }\n        const lastInfo = prevInfo && this.getLastChildInfo(prevInfo.id!);\n        return this.move(moved, prevInfo, lastInfo);\n    }\n    public moveOutside(target: HTMLElement | SVGElement | string): Promise<MovedResult> {\n        const info = isString(target) ? this.getInfo(target)! : this.getInfoByElement(target)!;\n        const parentInfo = this.getInfo(info.scopeId!);\n        const rootInfo = this.getInfo(parentInfo.scopeId!);\n\n        const moved = rootInfo ? [info] : [];\n\n        return this.move(moved, rootInfo, parentInfo);\n    }\n    public moves(infos: Array<{ info: ElementInfo, parentInfo: ElementInfo, prevInfo?: ElementInfo }>): Promise<MovedResult> {\n        const container = this.viewportRef.current!;\n        const nextInfos = infos.map(info => {\n\n            return {\n                ...info,\n                moveMatrix: getOffsetOriginMatrix(info.info.el!, container),\n            };\n        })\n        const prevInfos = nextInfos.map(({ info, moveMatrix }) => {\n            return {\n                info,\n                parentInfo: this.getInfo(info.scopeId!),\n                prevInfo: this.getPrevInfo(info.id!),\n                // moveMatrix: mat4.invert(mat4.create(), moveMatrix!),\n            };\n        });\n        nextInfos.forEach(({ info, parentInfo, prevInfo }) => {\n            const children = this.getInfo(info.scopeId!).children!;\n\n            children.splice(children.indexOf(info), 1);\n\n\n            const parnetChildren = parentInfo.children!;\n            parnetChildren.splice(prevInfo ? parnetChildren.indexOf(prevInfo) + 1 : 0, 0, info);\n\n            info.scopeId = parentInfo.id;\n        });\n\n        return new Promise(resolve => {\n            const movedInfos = nextInfos.map(({ info }) => info);\n\n            this.forceUpdate(() => {\n                updateElements(movedInfos);\n                resolve({\n                    prevInfos,\n                    nextInfos,\n                });\n            })\n        });\n    }\n    public move(infos: ElementInfo[], parentInfo: ElementInfo, prevInfo?: ElementInfo): Promise<MovedResult> {\n        const sortedInfos = this.getSortedInfos(infos.map(info => info.el!));\n\n        return this.moves(sortedInfos.map((info, i) => {\n            return {\n                info,\n                parentInfo,\n                prevInfo: i === 0 ? prevInfo : sortedInfos[i - 1],\n            };\n        }));\n    }\n}\n","import * as React from \"react\";\nimport { prefix } from \"../utils/utils\";\nimport Editor from \"../Editor\";\nimport { EditorInterface } from \"../types\";\nimport Icon from \"../Icons/Icon\";\nimport { connectEditorContext } from \"../decorators/ConnectEditorContext\";\n\n@connectEditorContext\nexport default abstract class Tab extends React.PureComponent {\n    public static id: string;\n    public static icon: typeof Icon;\n    public abstract title: string;\n    public abstract renderTab(): any;\n    public eventList: Array<[string, any]> = [];\n    public render() {\n        return (\n            <div className={prefix(\"tab-popup\")}>\n                <h2>{this.title}</h2>\n                {this.renderTab()}\n            </div>\n        );\n    }\n    public addEvent(name: string, callback: any) {\n        this.eventList.push([name, callback]);\n        this.eventBus.on(name, callback);\n    }\n    public getMoveable() {\n        return this.moveableManager.current!.getMoveable();\n    }\n    public componentWillUnmount() {\n        const eventBus = this.eventBus;\n        this.eventList.forEach(([name, callback]) => {\n            eventBus.off(name, callback);\n        });\n    }\n}\nexport default interface Tab extends EditorInterface {\n    context: Editor;\n};\n","import { IObject } from \"@daybrush/utils\";\nimport * as React from \"react\";\nimport { StyledElement } from \"react-css-styled\";\n\nexport default class Input<T = {}, U = {}, I extends HTMLElement = HTMLElement> extends React.PureComponent<{\n    value?: any;\n    updateValue?: boolean;\n    inputProps?: IObject<any>,\n    onChange: (v: any) => any,\n} & T, U> {\n    public input = React.createRef<StyledElement<I>>();\n    public getValue(): any {\n        return;\n    }\n    public getElement() {\n        return this.input.current!.getElement();\n    }\n    public setValue(value: any) {\n    }\n    public componentDidMount() {\n        const props = this.props;\n\n        props.updateValue && this.setValue(props.value);\n    }\n    public componentDidUpdate() {\n        const props = this.props;\n\n        props.updateValue && this.setValue(props.value);\n    }\n}\n","import * as React from \"react\";\nimport { getKey } from \"keycon\";\nimport Input from \"./Input\";\nimport { isUndefined, IObject } from \"@daybrush/utils\";\nimport { prefix } from \"../utils/utils\";\nimport styled from \"react-css-styled\";\n\nconst TextElement = styled(\"input\", `\n{\n    position: relative;\n    text-align: left;\n    appearance: none;\n    -webkit-appearance: none;\n    outline: none;\n    display: block;\n    width: 100%;\n    height: 30px;\n    background: transparent;\n    color: var(--mainColor);\n    font-weight: bold;\n    background: none;\n    border: 0;\n    padding: 5px;\n    box-sizing: border-box;\n    background: var(--back1);\n    font-size: 12px;\n}\n`);\nexport default class TextBox extends Input<{}, {}, HTMLInputElement> {\n    protected inputAttributes: IObject<any> = {};\n    public render() {\n        return (\n            <TextElement ref={this.input}\n                className={prefix(\"input\")}\n                {...this.inputAttributes}\n                {...this.props.inputProps}\n                onInput={this.onInput}\n                onKeyDown={this.onKeyDown}\n                onKeyUp={this.onKeyUp} />\n        );\n    }\n    public getValue(): any {\n        return this.getElement().value;\n    }\n    public setValue(value: any) {\n        this.getElement().value = `${isUndefined(value) ? \"\" : value}`;\n    }\n    protected onInput = (e: any) => {\n        const ev = e.nativeEvent || e;\n\n        if (!isUndefined(ev.data)) {\n            return;\n        }\n        // click (up / down)\n        this.props.onChange(this.getElement().value);\n    }\n\n    protected onKeyDown = (e: any) => {\n        e.stopPropagation();\n    }\n    protected onKeyUp = (e: any) => {\n        const target = e.currentTarget as HTMLInputElement;\n\n        e.stopPropagation();\n        if (getKey(e.keyCode) === \"enter\") {\n            this.props.onChange(target.value);\n        }\n    }\n}\n","import TextBox from \"./TextBox\";\n\nexport default class NumberBox extends TextBox {\n    protected inputAttributes = {\n        type: \"number\",\n        min: 0,\n        step: 0.1,\n        pattern: \"[0-9.]*\",\n    };\n}\n","import * as React from \"react\";\nimport { IObject } from \"@daybrush/utils\";\nimport Input from \"./Input\";\nimport { prefix } from \"../utils/utils\";\nimport styled from \"react-css-styled\";\n\n\nconst TabInputElement = styled(\"div\", `\n{\n    position: relative;\n    box-sizing: border-box;\n    padding: 2px;\n    display: inline-block;\n    vertical-align: top;\n}\nh3, h4 {\n    color: white;\n    margin: 0;\n    padding: 7px 5px;\n    font-size: 12px;\n    font-weight: bold;\n    display: inline-block;\n}\nh4 {\n    font-size: 11px;\n}\n:host.scena-full {\n    width: 100%;\n}\n:host.scena-half {\n    width: 50%;\n}\n:host.scena-third {\n    width: 33%;\n}\n:host.scena-twothird {\n    width: 66%;\n}\n:host.scena-half:nth-child(2n + 1) {\n    padding-right: 5px;\n}\n:host.scena-half:nth-child(2n + 2) {\n    padding-left: 5px;\n}\n`);\n\nexport default class TabInputBox extends React.PureComponent<{\n    type: \"half\" | \"full\" | \"third\" | \"twothird\",\n    onChange: (v: any) => any,\n    input: typeof Input,\n    label?: string,\n    props?: IObject<any>,\n    inputProps?: IObject<any>,\n    value?: any;\n    updateValue?: boolean;\n}> {\n    public input = React.createRef<Input>();\n    public render() {\n        const {\n            label,\n            type,\n            props = {},\n            inputProps = {},\n            input: InputType,\n            onChange,\n            value,\n            updateValue,\n        } = this.props;\n\n        return <TabInputElement className={prefix(\"tab-input\", type)}>\n            {label && <h3>{label}</h3>}\n            <InputType ref={this.input} onChange={onChange}\n                {...props}\n                inputProps={inputProps} value={value} updateValue={updateValue}></InputType>\n        </TabInputElement>;\n    }\n    public setValue(v: any) {\n        this.input.current!.setValue(v);\n    }\n    public getValue() {\n        return this.input.current!.getValue();\n    }\n}\n","import * as React from \"react\";\nimport Input from \"./Input\";\nimport { IObject } from \"@daybrush/utils\";\nimport { prefix } from \"../utils/utils\";\nimport styled from \"react-css-styled\";\n\nconst AnchorElement = styled(\"div\", `\n{\n    position: relative;\n    width: 30px;\n    height: 35px;\n    margin: auto;\n    box-sizing: border-box;\n}\n.scena-anchor-input-background {\n    position: relative;\n    width: 30px;\n    height: 30px;\n    background: var(--back1);\n}\n.scena-anchor-control {\n    position: absolute;\n    width: 8px;\n    height: 8px;\n    transform: translate(-50%, -50%);\n    left: 50%;\n    top: 50%;\n    padding: 1px;\n    box-sizing: border-box;\n}\n.scena-anchor-control:before {\n    content: \"\";\n    position: relative;\n    display: block;\n    background: var(--back5);\n    width: 100%;\n    height: 100%;\n}\n.scena-anchor-control.scena-anchor-selected {\n    padding: 0px;\n}\n.scena-anchor-control.scena-anchor-selected:before {\n    background: white;\n}\n\n.scena-anchor-control.scena-anchor-n {\n    top: 0;\n}\n.scena-anchor-control.scena-anchor-s {\n    top: 100%;\n}\n.scena-anchor-control.scena-anchor-w {\n    left: 0;\n}\n.scena-anchor-control.scena-anchor-e {\n    left: 100%;\n}\n\n`);\n\n\n\nconst HORIZONTAL_DIRECTIONS = [\"w\", \"\", \"e\"];\nconst VERTICAL_DIRECTIONS = [\"n\", \"\", \"s\"];\nexport default class Anchor extends Input {\n    protected inputAttributes: IObject<any> = {};\n    public state = {\n        origin: [50, 50],\n    }\n    public render() {\n        const origin = this.state.origin.map(v => Math.min(100, Math.max(0, Math.round(v / 50) * 50)));\n        return (\n            <AnchorElement className={prefix(\"anchor-input\")}>\n                <div className={prefix(\"anchor-input-background\")} onClick={this.onClick}>\n                    {VERTICAL_DIRECTIONS.map((v, i) => {\n                        return HORIZONTAL_DIRECTIONS.map((h, j) => {\n                            const classNames: string[] = [];\n                            if (v) {\n                                classNames.push(`anchor-${v}`);\n                            }\n                            if (h) {\n                                classNames.push(`anchor-${h}`);\n                            }\n                            if (origin[0] === j * 50 && origin[1] === i * 50) {\n                                classNames.push(`anchor-selected`);\n                            }\n                            return <div key={`dir${h}-${v}`}\n                                className={prefix(\"anchor-control\", ...classNames)} data-anchor-index={`${j},${i}`}></div>;\n                        })\n                    })}\n                </div>\n            </AnchorElement>\n        );\n    }\n    public onClick = (e: any) => {\n        const target = e.target as HTMLElement;\n        const indexes = target.getAttribute(\"data-anchor-index\");\n\n        if (!indexes) {\n            return;\n        }\n        const origin = indexes.split(\",\").map(v => parseFloat(v) * 50);\n        this.props.onChange(origin);\n    }\n    public setValue(v: string) {\n        this.setState({\n            origin: v,\n        });\n    }\n    public getValue() {\n        return this.state.origin;\n    }\n}\n","import * as React from \"react\";\nimport Icon from \"./Icon\";\n\nexport default class TransformIcon extends Icon {\n    public static id = \"Transform\";\n    public renderIcon() {\n        return (\n            <svg viewBox=\"0 0 80 80\">\n                <rect x=\"20\" y=\"20\" width=\"40\" height=\"40\" stroke=\"#fff\" strokeWidth=\"3\" fill=\"rgba(255, 255, 255, 0.5)\"></rect>\n                <rect x=\"15\" y=\"15\" width=\"10\" height=\"10\" fill=\"#fff\"></rect>\n                <rect x=\"35\" y=\"15\" width=\"10\" height=\"10\" fill=\"#fff\"></rect>\n                <rect x=\"55\" y=\"15\" width=\"10\" height=\"10\" fill=\"#fff\"></rect>\n\n                <rect x=\"15\" y=\"35\" width=\"10\" height=\"10\" fill=\"#fff\"></rect>\n                <rect x=\"55\" y=\"35\" width=\"10\" height=\"10\" fill=\"#fff\"></rect>\n\n\n                <rect x=\"15\" y=\"55\" width=\"10\" height=\"10\" fill=\"#fff\"></rect>\n                <rect x=\"35\" y=\"55\" width=\"10\" height=\"10\" fill=\"#fff\"></rect>\n                <rect x=\"55\" y=\"55\" width=\"10\" height=\"10\" fill=\"#fff\"></rect>\n            </svg>\n        );\n    }\n}\n","import * as React from \"react\";\nimport Tab from \"./Tab\";\nimport { prefix } from \"../utils/utils\";\nimport NumberBox from \"../Inputs/NumberBox\";\nimport TabInputBox from \"../Inputs/TabInputBox\";\nimport Anchor from \"../Inputs/Anchor\";\nimport TransformIcon from \"../Icons/TransformIcon\";\n\nconst inputProps = {\n    step: 1,\n};\n\nexport default class TransformTab extends Tab {\n    public static id = \"Transform\";\n    public static icon = TransformIcon;\n    public title = \"Transform\";\n    public xInput = React.createRef<TabInputBox>();\n    public yInput = React.createRef<TabInputBox>();\n    public wInput = React.createRef<TabInputBox>();\n    public hInput = React.createRef<TabInputBox>();\n    public oInput = React.createRef<TabInputBox>();\n    public rInput = React.createRef<TabInputBox>();\n    public renderTab() {\n\n        return <div className={prefix(\"transform-tab\")}>\n            <div className={prefix(\"tab-line\")}>\n                <TabInputBox ref={this.oInput}\n                    type={\"half\"} label=\"Anchor\" input={Anchor} onChange={this.onChangeOrigin} />\n                <TabInputBox ref={this.rInput}\n                    type={\"half\"} label=\"Rotation\" input={NumberBox} onChange={this.onChangeRotate} />\n            </div>\n            <div className={prefix(\"tab-line\")}>\n                <TabInputBox ref={this.xInput} type={\"half\"} label=\"X\" input={NumberBox} onChange={this.onChangePos} />\n                <TabInputBox ref={this.yInput} type={\"half\"} label=\"Y\" input={NumberBox} onChange={this.onChangePos} />\n            </div>\n            <div className={prefix(\"tab-line\")}>\n                <TabInputBox ref={this.wInput} type={\"half\"}\n                    label=\"W\" input={NumberBox} inputProps={inputProps} onChange={this.onChangeSize} />\n                <TabInputBox ref={this.hInput} type={\"half\"}\n                    label=\"H\" input={NumberBox} inputProps={inputProps} onChange={this.onChangeSize} />\n            </div>\n        </div>;\n    }\n    public componentDidMount() {\n        this.addEvent(\"render\", this.onRender);\n        this.addEvent(\"renderGroup\", this.onRender);\n        this.addEvent(\"setSelectedTargets\", this.onRender);\n\n        this.onRender();\n    }\n    public onChangeRotate = (v: any) => {\n        const rotate = parseFloat(v);\n        this.getMoveable().request(\"rotatable\", { rotate, isInstant: true });\n    }\n    public onChangePos = () => {\n        const x = parseFloat(this.xInput.current!.getValue());\n        const y = parseFloat(this.yInput.current!.getValue());\n\n        this.getMoveable().request(\"draggable\", { x, y, isInstant: true });\n    }\n    public onChangeOrigin = (origin: number[]) => {\n        const moveable = this.getMoveable();\n        const rect = moveable.getRect();\n\n        const ow = rect.offsetWidth * origin[0] / 100;\n        const oh = rect.offsetHeight * origin[1] / 100;\n        this.getMoveable().request(\"originDraggable\", { origin: [ow, oh] }, true);\n    }\n    public onChangeSize = () => {\n        const width = parseFloat(this.wInput.current!.getValue());\n        const height = parseFloat(this.hInput.current!.getValue());\n\n        this.getMoveable().request(\"resizable\", { offsetWidth: width, offsetHeight: height, isInstant: true });\n    }\n    public onRender = () => {\n        const moveable = this.getMoveable();\n\n        const rect = moveable.getRect();\n\n        this.xInput.current!.setValue(rect.left);\n        this.yInput.current!.setValue(rect.top);\n        this.wInput.current!.setValue(rect.offsetWidth);\n        this.hInput.current!.setValue(rect.offsetHeight);\n        this.rInput.current!.setValue(Math.round(rect.rotation));\n\n        const origin = rect.transformOrigin;\n\n        this.oInput.current!.setValue([\n            origin[0] / rect.offsetWidth * 100,\n            origin[1] / rect.offsetHeight * 100,\n        ]);\n    }\n}\n","import * as React from \"react\";\nimport { prefix, between } from \"../../utils/utils\";\nimport { IObject, isObject, isArray, findIndex, hasClass } from \"@daybrush/utils\";\nimport File from \"./File\";\nimport KeyController from \"keycon\";\nimport Gesto, { OnDrag, OnDragStart, OnDragEnd } from \"gesto\";\nimport styled, { StyledElement } from \"react-css-styled\";\n\nconst FolderElement = styled(\"div\", `\n.scena-fold-icon {\n    position: relative;\n    display: inline-block;\n    vertical-align: middle;\n    width: 10px;\n    height: 20px;\n}\n.scena-fold-icon:before {\n    content: \"\";\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    transform: translate(-50%, -50%);\n    border-top: 4px solid #fff;\n    border-left: 3px solid transparent;\n    border-right: 3px solid transparent;\n}\n.scena-fold-icon.scena-fold:before {\n    border-right: 0;\n    border-left: 4px solid #fff;\n    border-top: 3px solid transparent;\n    border-bottom: 3px solid transparent;\n}\n{\n    position: relative;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n    --file-padding: 10px;\n}\n.scena-folder .scena-properties {\n    margin-left: var(--file-padding);\n}\n.scena-file {\n    position: relative;\n    box-sizing: border-box;\n    padding: 2px;\n    display: inline-block;\n    vertical-align: top;\n    border-bottom: 1px solid var(--back1);\n    width: 100%;\n}\n.scena-file h3 {\n    color: white;\n    margin: 0;\n    padding: 7px 5px;\n    font-size: 12px;\n    font-weight: bold;\n    display: inline-block;\n}\n.scena-shadows {\n    position: absolute;\n    pointer-events: none;\n    transition: translateY(-50%);\n    opacity: 0.5;\n    top: 0;\n    left: 0;\n    width: 100%;\n    z-index: 10;\n    display: none;\n}\n.scena-file.scena-selected {\n    background: var(--mainColor);\n}\n.scena-file:before {\n    position: absolute;\n    left: calc(var(--file-padding) * var(--pointer-depth));\n    width: 100%;\n    height: 2px;\n    background: #48f;\n    transform: translateY(-50%);\n}\n.scena-file.scena-bottom-pointer:before {\n    content: \"\";\n    top: 100%;\n}\n.scena-file.scena-top-pointer:before {\n    content: \"\";\n    top: 0%;\n}\n`);\nexport interface FileInfo<T> {\n    id: string;\n    scope: string[],\n    fullId: string;\n    parentId: string;\n    depth: number;\n    value: T;\n}\n\nfunction getCurrentFile(target: HTMLElement) {\n    while (target) {\n        if (target.hasAttribute(\"data-file-key\")) {\n            break;\n        }\n        target = target.parentElement as HTMLElement;\n    }\n    return target;\n}\nexport default class Folder<T = any> extends React.PureComponent<{\n    scope: string[],\n    name: string,\n    properties: IObject<T> | T[],\n    selected: string[] | null,\n    multiselect?: boolean,\n    isMove?: boolean,\n    isMoveChildren?: boolean,\n    checkMove?: (prevInfo: FileInfo<T>) => boolean,\n    onMove?: (selectedInfos: Array<FileInfo<T>>, parentInfo?: FileInfo<T>, prevInfo?: FileInfo<T>) => any,\n    onSelect?: (e: string[]) => any,\n    FileComponent: ((props: File[\"props\"]) => any) | typeof File,\n    getId?: (value: any, id: any) => any,\n    getFullId?: (id: string, scope: string[]) => string,\n    getName?: (value: any, id: any) => any,\n    getChildren?: (value: any, id: any, scope: any[]) => any,\n}> {\n    public static defaultProps = {\n        selected: [],\n        onMove: () => { },\n        checkMove: () => true,\n        onSelect: () => { },\n        getFullId: (id: string, scope: string[]) => [...scope, id].join(\"///\"),\n        getId: (_: any, id: any, scope: string[]) => id,\n        getName: (_: any, id: any) => id,\n        getChildren: (value: any) => value,\n    }\n    public moveGesto!: Gesto;\n    public folderRef = React.createRef<StyledElement<HTMLDivElement>>();\n    public shadowRef = React.createRef<HTMLDivElement>();\n    public state: {\n        fold: boolean,\n        shadows: Array<FileInfo<T>>,\n    } = {\n            fold: false,\n            shadows: [],\n        };\n    public isSelected(key: string) {\n        const selected = this.props.selected;\n\n        return selected && selected.indexOf(key) > -1;\n    }\n    public render() {\n        const {\n            scope,\n            name,\n            getFullId,\n        } = this.props;\n\n        const fullId = scope.length ? getFullId!(scope[scope.length - 1], scope.slice(0, -1)) : \"\";\n        return <FolderElement className={prefix(\"folder\")} ref={this.folderRef}>\n            {name && <div className={prefix(\"file\", this.isSelected(fullId) ? \"selected\" : \"\")}\n                data-file-key={fullId} onClick={this.onClick}>\n                <div className={prefix(\"fold-icon\", this.state.fold ? \"fold\" : \"\")} onClick={this.onClickFold}></div>\n                <h3 >{name}</h3>\n            </div>}\n            <div className={prefix(\"properties\")}>\n                {this.renderProperties()}\n            </div>\n            {this.renderShadows()}\n        </FolderElement>\n    }\n    public componentDidMount() {\n        if (this.props.isMove) {\n            const folderElement = this.folderRef.current!.getElement();\n            this.moveGesto = new Gesto(folderElement, {\n                container: window,\n                checkInput: true,\n            }).on(\"dragStart\", this.onDragStart)\n                .on(\"drag\", this.onDrag)\n                .on(\"dragEnd\", this.onDragEnd);\n        }\n    }\n    public componentWillUnmount() {\n        if (this.moveGesto) {\n            this.moveGesto.unset();\n        }\n    }\n    private renderProperties() {\n        const {\n            scope,\n            properties,\n            selected,\n            multiselect,\n            onSelect,\n            getFullId,\n            FileComponent,\n            isMove,\n            getId,\n            getName,\n            getChildren,\n        } = this.props;\n\n        if (this.state.fold) {\n            return;\n        }\n        const keys = Object.keys(properties);\n\n        return keys.map(key => {\n            const value = (properties as any)[key];\n            const name = getName!(value, key);\n            const nextScope = scope.slice();\n            const id = getId!(value, key);\n            const fullId = getFullId!(id, nextScope);\n            nextScope.push(id);\n\n            const children = getChildren!(value, key, scope);\n\n            if (children && (isArray(children) ? children.length : isObject(children))) {\n                return <Folder<T> key={fullId}\n                    name={name} scope={nextScope} properties={children}\n                    multiselect={multiselect}\n                    getId={getId}\n                    getName={getName}\n                    getFullId={getFullId}\n                    getChildren={getChildren}\n                    selected={selected} onSelect={isMove ? undefined : onSelect} FileComponent={FileComponent} />;\n            }\n            return <div key={fullId} className={prefix(\"file\", this.isSelected(fullId) ? \"selected\" : \"\")}\n                data-file-key={fullId} onClick={isMove ? undefined : this.onClick}>\n                <FileComponent scope={nextScope} name={name} value={value} fullId={fullId} />\n            </div>;\n        });\n    }\n    private renderShadows() {\n        const {\n            FileComponent,\n            getName,\n            scope,\n        } = this.props;\n        if (scope.length) {\n            return;\n        }\n        return <div className={prefix(\"shadows\")} ref={this.shadowRef}>\n            {this.state.shadows.map(info => {\n                const {\n                    scope: fileScope,\n                    value,\n                    fullId,\n                    id,\n                } = info;\n                const name = getName!(value, id);\n                return <div key={fullId} className={prefix(\"file\", \"selected\", \"shadow\")}>\n                    <FileComponent scope={fileScope} name={name} value={value} fullId={fullId} />\n                </div>;\n            })}\n        </div>;\n    }\n    private onClickFold = (e: any) => {\n        e.stopPropagation();\n        this.setState({\n            fold: !this.state.fold,\n        });\n    }\n    private onClick = ({ currentTarget }: any) => {\n        const key = currentTarget.getAttribute(\"data-file-key\")!;\n        const {\n            multiselect,\n            onSelect,\n            selected,\n        } = this.props;\n        if (multiselect) {\n            let nextSelected = (selected || []).slice();\n            const index = nextSelected.indexOf(key);\n\n            if (KeyController.global.shiftKey) {\n                if (index > -1) {\n                    nextSelected.splice(index, 1);\n                } else {\n                    nextSelected.push(key);\n                }\n            } else {\n                nextSelected = [key];\n            }\n            onSelect!(nextSelected);\n        } else {\n            onSelect!([key]);\n        }\n    }\n    private onDragStart = (e: OnDragStart) => {\n        if (hasClass(e.inputEvent.target, prefix(\"fold-icon\"))) {\n            e.stop();\n            return false;\n        }\n        const folderElement = this.folderRef.current!.getElement();\n        const rect = folderElement.getBoundingClientRect();\n        const datas = e.datas;\n        const offsetX = e.clientX - rect.left;\n        // const offsetY = e.clientY - rect.top;\n\n        datas.offsetX = offsetX;\n        datas.folderRect = rect;\n        datas.folderLine = rect.left + rect.width - 10;\n        datas.objMap = this.flatMap();\n\n        e.inputEvent.preventDefault();\n        e.inputEvent.stopPropagation();\n    }\n\n    private onDrag = (e: OnDrag) => {\n        const folderElement = this.folderRef.current!.getElement();\n        const { clientX, clientY, datas } = e;\n\n        this.clearPointers();\n        datas.prevInfo = null;\n        datas.isTop = false;\n        const selected = this.props.selected!;\n        const objMap = datas.objMap;\n\n\n        if (!datas.dragFirst) {\n            datas.dragFirst = true;\n            const clickedTarget: HTMLElement = getCurrentFile(e.inputEvent.target);\n\n            if (clickedTarget && selected.indexOf(clickedTarget.getAttribute(\"data-file-key\")!) === -1) {\n                this.onClick({ currentTarget: clickedTarget });\n                return;\n            }\n        }\n        if (!selected || !selected.length) {\n            return;\n        }\n        const fileInfos: Array<FileInfo<T>> = selected.map(id => objMap[id]);\n\n        if (!this.state.shadows.length) {\n            this.setState({\n                shadows: fileInfos,\n            }, () => {\n                // datas.offsetY = 0;\n                this.updateShadowPosition(datas.folderRect, e);\n            });\n            return;\n        } else {\n            this.updateShadowPosition(datas.folderRect, e);\n        }\n        let target = getCurrentFile(document.elementFromPoint(datas.folderLine, e.clientY) as HTMLElement);\n\n        if (!target) {\n            return;\n        }\n        const infos = this.flatChildren();\n        let rect = target.getBoundingClientRect();\n        let isTop = rect.top + rect.height / 2 > clientY;\n\n        let key = target.getAttribute(\"data-file-key\")!;\n        let siblingIndex = findIndex(infos, info => info.fullId === key);\n        let targetInfo = infos[siblingIndex];\n        let prevInfo = infos[siblingIndex - 1];\n\n        if (prevInfo && isTop) {\n            --siblingIndex;\n            targetInfo = infos[siblingIndex];\n            prevInfo = infos[siblingIndex - 1];\n            key = targetInfo.fullId!;\n            target = folderElement.querySelector<HTMLElement>(`[data-file-key=\"${key}\"]`)!;\n\n            if (!target) {\n                return;\n            }\n            rect = target.getBoundingClientRect();\n            isTop = false;\n        }\n        const nextInfo = infos[siblingIndex + 1];\n        const targetDepth = targetInfo.depth;\n        const nextDepth = nextInfo ? nextInfo.depth : 0;\n        const depthRange = [\n            Math.min(nextDepth, targetDepth) - targetDepth,\n            Math.max(targetDepth + 1, nextDepth) - targetDepth,\n        ];\n        let distX = clientX - rect.left;\n        let distDepth = isTop ? 0\n            : between(Math.round((distX > 0 ? distX * 0.2 : distX) / 10), depthRange[0], depthRange[1]);\n\n        if (nextInfo && !isTop && selected.indexOf(nextInfo.fullId) > -1 && targetDepth + distDepth === nextDepth) {\n            return;\n        }\n        if (this.contains(selected, key)) {\n            return;\n        }\n        if (selected.indexOf(key) > -1 && distDepth >= 0) {\n            return;\n        }\n        const {\n            isMoveChildren,\n            checkMove,\n        } = this.props;\n\n        if (isMoveChildren) {\n            const prevScope = targetInfo.scope;\n            const parentScope = [...targetInfo.scope, targetInfo.id];\n\n            if (fileInfos.every(info => info.scope.every((v, i) => v === prevScope[i]))) {\n                distDepth = 0;\n            } else if (fileInfos.every(info => info.scope.every((v, i) => v === parentScope[i]))) {\n                distDepth = 1;\n            } else {\n                return;\n            }\n        } else if (distDepth > 0 && !checkMove!(targetInfo)) {\n            distDepth = 0;\n        }\n        target.style.setProperty(\"--pointer-depth\", `${distDepth}`);\n        target.classList.add(prefix(isTop ? \"top-pointer\" : \"bottom-pointer\"));\n\n\n        datas.depth = distDepth;\n        datas.isTop = isTop;\n        datas.prevInfo = targetInfo;\n    }\n    private onDragEnd = (e: OnDragEnd) => {\n        this.clearPointers();\n\n        if (!e.isDrag) {\n            const currentTarget = getCurrentFile(e.inputEvent.target);\n\n            if (currentTarget) {\n                this.onClick({ currentTarget });\n            }\n            return;\n        }\n        const datas = e.datas;\n        const depth = datas.depth;\n        let prevInfo: FileInfo<T> | undefined = datas.prevInfo;\n        const isTop = datas.isTop;\n        const onMove = this.props.onMove!;\n        const objMap = datas.objMap;\n        const selectedInfos: Array<FileInfo<T>> = (this.props.selected || []).map(id => objMap[id]);\n\n        let parentInfo: FileInfo<T> | undefined;\n\n        if (prevInfo) {\n            if (depth <= 0) {\n                const length = Math.abs(depth);\n\n                for (let i = 0; i < length; ++i) {\n                    prevInfo = objMap[prevInfo!.parentId];\n                }\n                parentInfo = objMap[prevInfo!.parentId];\n            } else {\n                parentInfo = prevInfo;\n                prevInfo = undefined;\n            }\n        }\n\n        if (!parentInfo && isTop) {\n            onMove(selectedInfos);\n        } else if (parentInfo || prevInfo) {\n            onMove!(selectedInfos, parentInfo, prevInfo);\n        }\n        this.setState({\n            shadows: [],\n        }, () => {\n            this.shadowRef.current!.style.cssText = \"display: none\";\n        })\n    }\n    private updateShadowPosition(rect: ClientRect, e: OnDragStart | OnDrag) {\n        const el = this.shadowRef.current;\n\n        if (!el || !this.state.shadows.length) {\n            return;\n        }\n        const datas = e.datas;\n        el.style.cssText\n            = `display: block; transform: translate(${e.clientX - rect.left - datas.offsetX}px, ${e.clientY - rect.top}px) translateY(-50%)`;\n    }\n    private contains(ids: string[], key: string, objMap = this.flatMap()): boolean {\n        const info = objMap[key];\n        const parentId = info.parentId;\n\n        if (!parentId) {\n            return false;\n        }\n        if (ids.indexOf(parentId) > -1) {\n            return true;\n        }\n        return this.contains(ids, parentId, objMap);\n    }\n    private flatMap() {\n        const children = this.flatChildren();\n        const objMap: IObject<FileInfo<T>> = {};\n        children.forEach(info => {\n            objMap[info.fullId] = info;\n        });\n\n        return objMap;\n    }\n    private flatChildren(\n        properties = this.props.properties!,\n        parentId: string = \"\",\n        scope: string[] = [],\n        children: FileInfo<T>[] = []\n    ) {\n        const keys = Object.keys(properties);\n        const {\n            getFullId,\n            getId,\n            getChildren,\n        } = this.props;\n        const depth = scope.length;\n        keys.forEach(key => {\n            const value = (properties as any)[key];\n            const nextScope = scope.slice();\n            const id = getId!(value, key);\n            const fullId = getFullId!(id, nextScope);\n            nextScope.push(id);\n\n            const valueChildren = getChildren!(value, key, scope);\n\n            children.push({\n                id,\n                fullId,\n                parentId,\n                depth,\n                scope,\n                value,\n            });\n            if (valueChildren && (isArray(valueChildren) ? valueChildren.length : isObject(valueChildren))) {\n                this.flatChildren(valueChildren, fullId, nextScope, children);\n            }\n        });\n\n        return children;\n    }\n    private clearPointers() {\n        [].slice.call(document.querySelectorAll<HTMLElement>(\".scena-top-pointer, .scena-bottom-pointer\")).forEach((el: HTMLElement) => {\n            const classList = el.classList;\n\n            classList.remove(prefix(\"top-pointer\"));\n            classList.remove(prefix(\"bottom-pointer\"));\n        });\n    }\n}\n","import * as React from \"react\";\nimport { prefix } from \"../utils/utils\";\nimport styled from \"react-css-styled\";\n\nconst LabelElement = styled(\"div\", `\n{\n    position: relative;\n    box-sizing: border-box;\n    padding: 2px;\n    display: inline-block;\n    vertical-align: top;\n}\nh3 {\n    color: white;\n    margin: 0;\n    padding: 7px 5px;\n    font-size: 12px;\n    font-weight: bold;\n    display: inline-block;\n}\n:host.scena-full {\n    width: 100%;\n}\n:host.scena-half {\n    width: 50%;\n}\n:host.scena-third {\n    width: 33%;\n}\n:host.scena-twothird {\n    width: 66%;\n}\n:host.scena-half:nth-child(2n + 1) {\n    padding-right: 5px;\n}\n:host.scena-half:nth-child(2n + 2) {\n    padding-left: 5px;\n}\n`);\nexport default class LabelBox extends React.PureComponent<{\n    type: \"half\" | \"full\" | \"third\" | \"twothird\" | \"\",\n    label: string,\n}> {\n    public render() {\n        const {\n            label,\n            type,\n        } = this.props;\n\n        return <LabelElement className={prefix(\"label\", type)}>\n            <h3>{label}</h3>\n        </LabelElement>;\n    }\n}\n","import * as React from \"react\";\n\nexport default class File<T = {}> extends React.PureComponent<{\n    name: string,\n    scope: string[],\n    fullId: string,\n    value: any,\n} & T> {\n}\n","import * as React from \"react\";\nimport LabelBox from \"../../Inputs/LabelBox\";\nimport TabInputBox from \"../../Inputs/TabInputBox\";\nimport TextBox from \"../../Inputs/TextBox\";\nimport File from \"../Folder/File\";\n\nexport default class Property extends File<{\n    onChange: (scope: string[], value: any) => any\n}> {\n    public render() {\n        const {\n            name,\n            value,\n        } = this.props;\n        return <><LabelBox type={\"third\"} label={name}></LabelBox>\n            <TabInputBox type={\"twothird\"} input={TextBox} value={value}\n                updateValue={true}\n                onChange={this.onChange}\n            ></TabInputBox></>;\n    }\n    public onChange = (v: any) => {\n        const {\n            onChange,\n            scope,\n        } = this.props;\n\n        onChange(scope, v);\n    }\n}\n","import * as React from \"react\";\nimport Icon from \"./Icon\";\n\nexport default class FrameIcon extends Icon {\n    public static id = \"Frame\";\n    public renderIcon() {\n        return (\n            <svg viewBox=\"0 0 80 80\">\n                <g transform=\"matrix(1.18519,0,0,2.42309,-7.4076,-21.5629)\">\n                    <rect x=\"13\" y=\"17\" width=\"54\" height=\"2\" fill=\"white\" />\n                </g>\n                <g transform=\"matrix(1.18519,0,0,2.42309,-7.40741,14.3317)\">\n                    <rect x=\"13\" y=\"17\" width=\"54\" height=\"2\" fill=\"white\" />\n                </g>\n                <g transform=\"matrix(1.03519,0,0,1.31422,37.8389,-2.71207)\">\n                    <rect x=\"13\" y=\"25\" width=\"20\" height=\"15\" fill=\"white\" />\n                </g>\n                <g transform=\"matrix(1.03519,0,0,1.31422,11.7648,-2.71207)\">\n                    <rect x=\"13\" y=\"25\" width=\"20\" height=\"15\" fill=\"white\" />\n                </g>\n                <g transform=\"matrix(0.592593,0,0,1.31422,0.296296,-2.71207)\">\n                    <rect x=\"13\" y=\"25\" width=\"20\" height=\"15\" fill=\"white\" />\n                </g>\n            </svg>\n        );\n    }\n}\n","import * as React from \"react\";\nimport Tab from \"../Tab\";\nimport { prefix } from \"../../utils/utils\";\nimport Folder, { FileInfo } from \"../Folder/Folder\";\nimport Property from \"./Property\";\nimport File from \"../Folder/File\";\nimport { NameType } from \"scenejs\";\nimport FrameIcon from \"../../Icons/FrameIcon\";\n\nexport default class FrameTab extends Tab {\n    public static id = \"Frame\";\n    public static icon = FrameIcon;\n    public title = \"Frame\";\n    public state: {\n        selected: string[],\n    } = {\n        selected: [],\n    };\n    public renderTab() {\n        const {\n            selected,\n        } = this.state;\n\n        const frame = this.getSelectedFrames()[0];\n\n        if (!frame) {\n            return;\n        }\n        return <div className={prefix(\"frame-tab\")}>\n            <Folder<NameType> name=\"\"\n                properties={frame.getOrders([]) || []}\n                getId={v => v}\n                getName={v => v}\n                getChildren={(value, _, scope) => {\n                    return frame.getOrders([...scope, value]) || [];\n                }}\n                scope={[]}\n                selected={selected}\n                isMove={true}\n                isMoveChildren={true}\n                checkMove={() => false}\n                onMove={this.onMove}\n                onSelect={this.onSelect}\n                FileComponent={this.renderProperty} />\n        </div>;\n    }\n    public componentDidMount() {\n        this.addEvent(\"render\", this.onRender as any);\n        this.addEvent(\"setSelectedTargets\", this.setTargets as any);\n    }\n    private renderProperty = ({ name, fullId, scope }: File[\"props\"]) => {\n        const frame = this.getSelectedFrames()[0];\n\n        return <Property name={name} fullId={fullId} scope={scope} value={frame.get(...fullId.split(\"///\"))} onChange={this.onChange}></Property>;\n    }\n    private onSelect = (selected: string[]) => {\n        this.setState({\n            selected,\n        })\n    }\n    private onMove = (selectedInfos: Array<FileInfo<any>>, parentInfo?: FileInfo<any>, prevInfo?: FileInfo<any>) => {\n        const parentScope = parentInfo ? [...parentInfo.scope, parentInfo.id] : [];\n        const frames = this.getSelectedFrames();\n        const frame = frames[0];\n        const orders = (frame.getOrders(parentScope) || []).slice();\n\n        const selectedProperty = selectedInfos[0].id;\n        const selectedIndex = orders.indexOf(selectedProperty);\n\n        if (selectedIndex !== -1) {\n            orders.splice(selectedIndex, 1);\n        }\n        if (prevInfo) {\n            const prevIndex = orders.indexOf(prevInfo.id);\n\n            if (prevIndex === -1) {\n                orders.push(selectedProperty);\n            } else {\n                orders.splice(prevIndex + 1, 0, selectedProperty);\n            }\n        } else {\n            orders.splice(0, 0, selectedProperty);\n        }\n        this.context.setOrders(parentScope, orders, true);\n    }\n    private onChange = (scope: string[], value: any) => {\n        const frames = this.getSelectedFrames();\n\n        if (!frames.length) {\n            return;\n        }\n        this.context.setProperty(scope, value, true);\n    }\n    private onRender = () => {\n        this.forceUpdate();\n    }\n    private setTargets = () => {\n        const state = this.state;\n\n        state.selected = [];\n        this.forceUpdate();\n    }\n}\n","import * as React from \"react\";\nimport { prefix } from \"../../utils/utils\";\n\nexport default class Align extends React.PureComponent<{\n    type: \"horizontal\" | \"vertical\",\n    direction: \"start\" | \"center\" | \"end\",\n    onClick: (type: \"horizontal\" | \"vertical\", direction: \"start\" | \"center\" | \"end\") => any,\n}> {\n    public render() {\n        const {\n            type,\n            direction,\n        } = this.props;\n        return <div className={prefix(\"align\", `align-${type}`, `align-${direction}`)}\n            onClick={this.onClick}>\n            <div className={prefix(\"align-line\")}></div>\n            <div className={prefix(\"align-element1\")}></div>\n            <div className={prefix(\"align-element2\")}></div>\n        </div>;\n    }\n    public onClick = () => {\n        const {\n            type,\n            direction,\n            onClick,\n        } = this.props;\n        onClick(type, direction);\n    }\n}\n","import * as React from \"react\";\nimport Icon from \"./Icon\";\n\nexport default class AlignIcon extends Icon {\n    public static id = \"Align\";\n    public renderIcon() {\n        return (\n            <svg viewBox=\"0 0 73 73\">\n                <rect x=\"15\" y=\"16\" width=\"36\" height=\"6\" rx=\"3\" fill=\"#fff\"></rect>\n                <rect x=\"15\" y=\"35\" width=\"26\" height=\"6\" rx=\"3\" fill=\"#fff\"></rect>\n                <rect x=\"15\" y=\"54\" width=\"46\" height=\"6\" rx=\"3\" fill=\"#fff\"></rect>\n            </svg>\n        );\n    }\n}\n","import * as React from \"react\";\nimport Tab from \"../Tab\";\nimport { prefix, getId } from \"../../utils/utils\";\nimport Align from \"./Align\";\nimport MoveableGroup from \"react-moveable/declaration/MoveableGroup\";\nimport AlignIcon from \"../../Icons/AlignIcon\";\n\nconst TYPES = [\"vertical\", \"horizontal\"] as const;\nconst DIRECTIONS = [\"start\", \"center\", \"end\"] as const;\n\n\nfunction getDirectionPos(\n    type: \"horizontal\" | \"vertical\", direction: \"start\" | \"center\" | \"end\", rect: { left: number, top: number, width: number, height: number }): number {\n    let size: number;\n    let start: number;\n    if (type === \"horizontal\") {\n        size = rect.height;\n        start = rect.top;\n    } else {\n        size = rect.width;\n        start = rect.left;\n    }\n    if (direction === \"start\") {\n        return start;\n    }\n    if (direction === \"center\") {\n        return start + size / 2;\n    }\n    return start + size;\n}\nexport default class AlignTab extends Tab {\n    public static id = \"Align\";\n    public static icon = AlignIcon;\n    public title = \"Align\";\n    public renderTab() {\n        return <div className={prefix(\"align-tab\")}>\n            {TYPES.map(type => {\n                return DIRECTIONS.map(direction => {\n                    return <Align key={`${type}-${direction}`}\n                        type={type} direction={direction} onClick={this.onClick}></Align>\n                });\n            })}\n        </div>;\n    }\n    public onClick = (type: \"horizontal\" | \"vertical\", direction: \"start\" | \"center\" | \"end\") => {\n        const moveable = this.getMoveable();\n\n        if (!moveable.moveable) {\n            return;\n        }\n        const moveables = (moveable.moveable as MoveableGroup).moveables;\n        const rect = moveable.getRect();\n        const pos = getDirectionPos(type, direction, rect);\n\n        if (moveables) {\n            // Group\n            const infos = moveables.map(child => {\n                const target = child.state.target!;\n                const frame = this.moveableData.getFrame(target);\n\n                if (frame) {\n                    const prev = frame.get();\n                    const subRect = child.getRect();\n                    const subPos = getDirectionPos(type, direction, subRect);\n                    const delta = pos - subPos;\n\n                    const translate = frame.get(\"transform\", \"translate\").split(\",\").map((v: string) => parseFloat(v));\n\n\n                    translate[type === \"horizontal\" ? 1 : 0] += delta;\n\n                    frame.set(\"transform\", \"translate\", translate.map((t: number) => `${t}px`).join(\", \"));\n\n                    return { id: getId(target), prev, next: frame.get() };\n                }\n                return false;\n            }).filter(target => target);\n\n\n            this.historyManager.addAction(\"renders\", {\n                infos,\n            });\n            this.moveableData.renderFrames();\n            moveable.updateRect();\n        } else {\n            const viewportRect = {\n                width: 400,\n                height: 600,\n                left: 0,\n                top: 0,\n            }\n            const viewportPos = getDirectionPos(type, direction, viewportRect);\n            const delta = pos - viewportPos;\n\n            moveable.request(\"draggable\", { [type === \"horizontal\" ? \"deltaY\" : \"deltaX\"]: -delta }, true);\n        }\n    }\n}\n","import * as React from \"react\";\nimport LabelBox from \"../../Inputs/LabelBox\";\nimport File from \"../Folder/File\";\n\nexport default class Layer extends File {\n    public render() {\n        const {\n            name,\n        } = this.props;\n        return <><LabelBox type={\"full\"} label={name}></LabelBox></>;\n    }\n}\n","import * as React from \"react\";\nimport Icon from \"./Icon\";\n\nexport default class LayerIcon extends Icon {\n    public static id = \"Layer\";\n    public renderIcon() {\n        return (\n            <svg viewBox=\"0 0 73 73\">\n                <path d=\"M36.5,20 L56.5,30 L36.5,40 L16.5,30 L36.5,20Z\" stroke=\"#fff\" strokeWidth=\"3\" style={{\n                    fill: \"rgba(255, 255, 255, 0.5)\",\n                }}></path>\n                     <path d=\"M36.5,20 L56.5,30 L36.5,40 L16.5,30 L36.5,20Z\" stroke=\"#fff\" strokeWidth=\"3\" style={{\n                    fill: \"rgba(255, 255, 255, 0.5)\",\n                    transform: \"translateY(10px)\",\n                }}></path>\n                <path d=\"M36.5,20 L56.5,30 L36.5,40 L16.5,30 L36.5,20Z\" fill=\"#fff\" stroke=\"#fff\" strokeWidth=\"3\" style={{\n                    transform: \"translateY(20px)\",\n                }}></path>\n            </svg>\n        );\n    }\n}\n","import * as React from \"react\";\nimport Tab from \"../Tab\";\nimport Folder, { FileInfo } from \"../Folder/Folder\";\nimport File from \"../Folder/File\";\nimport Layer from \"./Layer\";\nimport { getIds, isScenaFunction } from \"../../utils/utils\";\nimport { isString } from \"@daybrush/utils\";\nimport { ElementInfo } from \"../../types\";\nimport LayerIcon from \"../../Icons/LayerIcon\";\n\nexport default class LayerTab extends Tab {\n    public static id = \"Layers\";\n    public static icon = LayerIcon;\n    public title = \"Layers\";\n\n    public renderTab() {\n        const infos = this.context.getViewportInfos();\n        const selected = getIds(this.getSelectedTargets());\n\n        return <Folder<ElementInfo>\n            scope={[]}\n            name=\"\" properties={infos}\n            multiselect={true}\n            isMove={true}\n            getId={(v: ElementInfo) => v.id}\n            getFullId={id => id}\n            getName={(v: ElementInfo) => v.name}\n            getChildren={(v: ElementInfo) => v.children || []}\n            selected={selected}\n            onSelect={this.onSelect}\n            checkMove={this.checkMove}\n            onMove={this.onMove}\n            FileComponent={this.renderFile} />;\n    }\n    public renderFile = ({ name, fullId, scope, value }: File[\"props\"]) => {\n        return <Layer name={name} fullId={fullId} scope={scope} value={value}></Layer>;\n    }\n    public componentDidMount() {\n        this.addEvent(\"setSelectedTargets\", this.setSelectedTargets);\n    }\n\n    private onSelect = (selected: string[]) => {\n        this.eventBus.requestTrigger(\"selectLayers\", {\n            selected,\n        });\n    }\n    private onMove = (selectedInfos: Array<FileInfo<ElementInfo>>, parentInfo?: FileInfo<ElementInfo>, prevInfo?: FileInfo<ElementInfo>) => {\n        const editor = this.context;\n        const viewport = editor.getViewport();\n\n        editor.moves(selectedInfos.map((info, i) => ({\n            info: info.value,\n            parentInfo: viewport.getInfo(parentInfo ? parentInfo.fullId : \"viewport\"),\n            prevInfo: i === 0\n                ? viewport.getInfo(prevInfo ? prevInfo.fullId : \"\")\n                : selectedInfos[i - 1].value,\n        })));\n    }\n    private checkMove = (prevInfo: FileInfo<ElementInfo>) => {\n        const jsx = prevInfo.value.jsx;\n\n        if (isScenaFunction(jsx)) {\n            return false;\n        }\n\n        return isString(jsx) || isString(jsx.type);\n    }\n    private setSelectedTargets = () => {\n        this.forceUpdate();\n    }\n}\n","import * as React from \"react\";\nimport Input from \"./Input\";\nimport { IObject } from \"@daybrush/utils\";\nimport { ChromePicker, ColorResult } from \"react-color\";\n\nconst AnyChromePicker = ChromePicker as any;\n\nexport default class ColorPicker extends Input {\n    protected inputAttributes: IObject<any> = {};\n    public state = {\n        color: \"rgba(255, 255, 255, 255)\",\n    }\n    public render() {\n        const color = this.state.color;\n\n        return (\n            <AnyChromePicker\n                width={\"180px\"}\n                color={color}\n                onChange={this.onChange}\n                onChangeComplete={this.onChangeComplete}\n            />\n        );\n    }\n    public componentDidUpdate() { }\n    public setValue(v: string) {\n        this.setState({\n            color: v,\n        });\n    }\n    public getValue() {\n        return this.state.color;\n    }\n    private onChange = (e: ColorResult) => {\n        const { r, g, b, a } = e.rgb;\n\n        this.setState({\n            color: `rgba(${r}, ${g}, ${b}, ${a})`,\n        });\n    }\n    private onChangeComplete = (e: ColorResult) => {\n        const { r, g, b, a } = e.rgb;\n\n        this.props.onChange(`rgba(${r}, ${g}, ${b}, ${a})`);\n    }\n}\n","import * as React from \"react\";\nimport Input from \"./Input\";\nimport { IObject, } from \"@daybrush/utils\";\nimport { prefix } from \"../utils/utils\";\nimport ColorPicker from \"./ColorPicker\";\nimport TextBox from \"./TextBox\";\nimport styled from \"react-css-styled\";\n\nconst ColorBoxElement = styled(\"div\", `\n.scena-color-input {\n    position: relative;\n}\n.scena-color-picker {\n    position: absolute;\n    top: 100%;\n    right: 0;\n    transform: translateY(10px) translateZ(1px);\n    z-index: 10;\n}\n\n.scena-color-background {\n    position: relative;\n    width: 30px;\n    height: 30px;\n    background: #4af;\n    border-radius: 5px;\n    display: inline-block;\n    vertical-align: top;\n    margin-right: 5px;\n}\n.scena-color-background+.scena-input {\n    display: inline-block;\n    vertical-align: top;\n    width: calc(100% - 40px);\n}\n\n`);\n\nexport default class ColorBox extends Input<{}, {}, HTMLDivElement> {\n    protected inputAttributes: IObject<any> = {};\n    protected colorInput = React.createRef<ColorPicker>();\n    protected textInput = React.createRef<TextBox>();\n    public state = {\n        display: \"none\",\n        color: \"#fff\",\n    };\n    public render() {\n        return (\n            <ColorBoxElement className={prefix(\"color-input\")} ref={this.input} onBlur={this.onBlur}>\n                <div className={prefix(\"color-background\")} style={{\n                    backgroundColor: this.state.color,\n                }} onClick={this.onClick}></div>\n                <TextBox\n                    ref={this.textInput}\n                    onChange={this.onChange}\n                    inputProps={{\n                        onFocus: this.onFocus,\n                    }}\n                ></TextBox>\n                {this.renderPicker()}\n            </ColorBoxElement>\n        );\n    }\n    public renderPicker() {\n        const {\n            display,\n        } = this.state;\n\n        if (display === \"none\") {\n            return;\n        }\n        return <div className={prefix(\"color-picker\")}\n            onMouseDown={this.onDragStart} onTouchStart={this.onDragStart}\n            style={{\n                display,\n            }}>\n            <ColorPicker\n                ref={this.colorInput}\n                onChange={this.onChange} />\n        </div>;\n    }\n    public setValue(v: string) {\n        this.setState({\n            color: v,\n        })\n        this.textInput.current!.setValue(v);\n        if (this.colorInput.current!) {\n            this.colorInput.current!.setValue(v);\n        }\n    }\n    public getValue() {\n        return this.textInput.current!.getValue();\n    }\n    public onFocus = () => {\n        this.setState({\n            display: \"block\",\n        });\n    }\n    public onBlur = (e: any) => {\n        const relatedTarget = e.nativeEvent.relatedTarget;\n\n        if (this.getElement().contains(relatedTarget)) {\n            return;\n        }\n        this.setState({\n            display: \"none\",\n        });\n    }\n    private onChange = (v: string) => {\n        this.props.onChange(v);\n    }\n    private onDragStart = (e: any) => {\n        if (e.target.tagName === \"INPUT\") {\n            return;\n        }\n        e.preventDefault();\n    }\n    private onClick = (e: any) => {\n        this.textInput.current!.getElement().focus();\n    }\n}\n","import * as React from \"react\";\nimport Icon from \"./Icon\";\n\nexport default class ColorIcon extends Icon {\n    public static id = \"Colors\";\n    public renderIcon() {\n        return (\n            <svg viewBox=\"0 0 73 73\">\n                <ellipse fill=\"#e77\" cx=\"36.5\" cy=\"26\" rx=\"17\" ry=\"17\"\n                    strokeLinejoin=\"round\"></ellipse>\n                <ellipse fill=\"#7e7\" cx=\"23\" cy=\"50\" rx=\"17\" ry=\"17\"\n                    strokeLinejoin=\"round\"></ellipse>\n                <ellipse fill=\"#77e\" cx=\"50\" cy=\"50\" rx=\"17\" ry=\"17\"\n                    strokeLinejoin=\"round\"></ellipse>\n            </svg>\n        );\n    }\n}\n","import * as React from \"react\";\nimport Tab from \"../Tab\";\nimport { prefix } from \"../../utils/utils\";\nimport ColorBox from \"../../Inputs/ColorBox\";\nimport TabInputBox from \"../../Inputs/TabInputBox\";\nimport ColorIcon from \"../../Icons/ColorIcon\";\n\n\nexport default class ColorTab extends Tab {\n    public static id = \"Colors\";\n    public static icon = ColorIcon;\n    public title = \"Colors\";\n\n    public renderTab() {\n        const frames = this.getSelectedFrames();\n        let backgroundColor = this.memory.get(\"background-color\");\n        let color = this.memory.get(\"color\");\n\n        if (frames.length) {\n            const backgroundColors = frames.map(frame => frame.get(\"background-color\"));\n            const colors = frames.map(frame => frame.get(\"color\"));\n\n            backgroundColor = backgroundColors.filter(color => color)[0] || \"transparent\";\n            color = colors.filter(color => color)[0] || \"#333\";\n        }\n\n        return <div className={prefix(\"current-tab\")}>\n            <TabInputBox type={\"full\"}\n                label=\"Background Color\"\n                input={ColorBox}\n                value={backgroundColor}\n                updateValue={true}\n                onChange={this.onChangeBackgroundColor} />\n            <TabInputBox type={\"full\"}\n                label=\"Text Color\"\n                input={ColorBox}\n                value={color}\n                updateValue={true}\n                onChange={this.onChangeTextColor} />\n        </div>;\n    }\n    public componentDidMount() {\n        this.addEvent(\"render\", this.onRender as any);\n        this.addEvent(\"setSelectedTargets\", this.onRender as any);\n    }\n    public onChangeBackgroundColor = (v: string) => {\n        this.memory.set(\"background-color\", v);\n        this.context.setProperty([\"background-color\"], v);\n    }\n    public onChangeTextColor = (v: string) => {\n        this.memory.set(\"color\", v);\n        this.context.setProperty([\"color\"], v);\n    }\n    private onRender = () => {\n        this.forceUpdate();\n    }\n}\n","import * as React from \"react\";\nimport Input from \"./Input\";\nimport { isUndefined, IObject } from \"@daybrush/utils\";\nimport { prefix } from \"../utils/utils\";\nimport styled from \"react-css-styled\";\n\nconst SelectElement = styled(\"select\", `\n{\n    position: relative;\n    appearance: none;\n    -webkit-appearance: none;\n    outline: none;\n    display: block;\n    width: 100%;\n    height: 30px;\n    padding: 5px;\n    background: transparent;\n    color: var(--mainColor);\n    font-weight: bold;\n    background: var(--back1);\n    border: 0;\n    box-sizing: border-box;\n    text-align: center;\n}\n\n`);\nexport default class SelectBox extends Input<{\n    options: string[]\n}, {}, HTMLSelectElement> {\n    protected inputAttributes: IObject<any> = {};\n    public render() {\n        const options = this.props.options || [];\n        return (\n            <SelectElement ref={this.input}\n                className={prefix(\"select\")}\n                {...this.inputAttributes}\n                {...this.props.inputProps}\n                onInput={this.onInput}>\n                {options.map(value => (<option key={value} value={value}>{value}</option>))}\n            </SelectElement>\n        );\n    }\n    public getValue(): any {\n        return this.getElement().value;\n    }\n    public setValue(value: any) {\n        this.getElement().value = `${isUndefined(value) ? \"\" : value}`;\n    }\n    protected onInput = (e: any) => {\n        const ev = e.nativeEvent || e;\n\n        if (!isUndefined(ev.data)) {\n            return;\n        }\n        // click (up / down)\n        this.props.onChange(this.getValue());\n    }\n}\n","import * as React from \"react\";\nimport Icon from \"./Icon\";\n\nexport default class FontIcon extends Icon {\n    public static id = \"Font\";\n    public renderIcon() {\n        return (\n            <svg viewBox=\"0 0 80 80\">\n                <path\n                    // tslint:disable-next-line: max-line-length\n                    d=\"M64.286,17.81L20.714,17.81L20.714,29.56L29.214,23L39.262,23L39.262,55.476L27.77,61.262L27.77,62.071L57.23,62.071L57.23,61.262L45.738,55.476L45.738,23L55.786,23L64.286,29.56L64.286,17.81Z\"\n                    style={{ fill: \"white\" }} />\n            </svg>\n        );\n    }\n}\n","import * as React from \"react\";\nimport Tab from \"../Tab\";\nimport { prefix } from \"../../utils/utils\";\nimport TabInputBox from \"../../Inputs/TabInputBox\";\nimport SelectBox from \"../../Inputs/SelectBox\";\nimport TextBox from \"../../Inputs/TextBox\";\nimport FontIcon from \"../../Icons/FontIcon\";\n\nconst FONT_FAMILY_PROPS = {\n    options: [\"sans-serif\"],\n};\nconst TEXT_ALIGN_PROPS = {\n    options: [\"left\", \"center\", \"right\", \"justify\"],\n};\nconst FONT_STYLE_PROPS = {\n    options: [\"normal\", \"italic\", \"blique\"],\n};\nconst FONT_WEIGHT_PROPS = {\n    options: [\"100\", \"200\", \"300\", \"normal\", \"500\", \"600\", \"bold\", \"800\"],\n};\nconst TEXT_DECORATION_PROPS = {\n    options: [\"none\", \"underline\", \"overline\", \"line-through\"],\n}\nexport default class FontTab extends Tab {\n    public static id = \"Font\";\n    public static icon = FontIcon;\n    public title = \"Font\";\n    public renderTab() {\n        const [\n            family,\n            size,\n            align,\n            style,\n            weight,\n            decoration,\n        ] = this.moveableData.getProperties([\n            [\"font-family\"],\n            [\"font-size\"],\n            [\"text-align\"],\n            [\"font-style\"],\n            [\"font-weight\"],\n            [\"text-decoration\"],\n        ], [\n            \"sans-serif\",\n            \"14px\",\n            \"left\",\n            \"normal\",\n            \"normal\",\n            \"none\",\n        ]);\n\n        return <div className={prefix(\"font-tab\")}>\n            <TabInputBox type={\"half\"} label=\"family\" input={SelectBox}\n                props={FONT_FAMILY_PROPS}\n                value={family} updateValue={true} onChange={this.onChangeFamily} />\n            <TabInputBox type={\"half\"} label=\"size\" input={TextBox}\n                value={size}\n                updateValue={true}\n                onChange={this.onChangeSize} />\n            <TabInputBox type={\"half\"} label=\"align\" input={SelectBox}\n                props={TEXT_ALIGN_PROPS}\n                value={align} updateValue={true}\n                onChange={this.onChangeAlign} />\n            <TabInputBox type={\"half\"} label=\"style\" input={SelectBox}\n                props={FONT_STYLE_PROPS}\n                value={style} updateValue={true}\n                onChange={this.onChangeStyle} />\n            <TabInputBox type={\"half\"} label=\"weight\" input={SelectBox}\n                props={FONT_WEIGHT_PROPS}\n                value={weight} updateValue={true}\n                onChange={this.onChangeWeight} />\n            <TabInputBox type={\"half\"} label=\"decoration\" input={SelectBox}\n                props={TEXT_DECORATION_PROPS}\n                value={decoration} updateValue={true}\n                onChange={this.onChangeDecoration} />\n        </div>;\n    }\n    public componentDidMount() {\n        this.addEvent(\"render\", this.onRender as any);\n        this.addEvent(\"setSelectedTargets\", this.setTargets as any);\n    }\n    private onChangeSize = (v: any) => {\n        this.changeProperty(\"font-size\", v);\n    }\n    private onChangeAlign = (v: any) => {\n        this.changeProperty(\"text-align\", v);\n    }\n    private onChangeFamily = (v: any) => {\n        this.changeProperty(\"font-family\", v);\n    }\n    private onChangeStyle = (v: any) => {\n        this.changeProperty(\"font-style\", v);\n    }\n    private onChangeWeight = (v: any) => {\n        this.changeProperty(\"font-weight\", v);\n    }\n    private onChangeDecoration = (v: any) => {\n        this.changeProperty(\"text-decoration\", v);\n    }\n    private onRender = () => {\n        this.forceUpdate();\n    }\n    private setTargets = () => {\n        this.forceUpdate();\n    }\n    private changeProperty(name: string, v: any) {\n        this.memory.set(name, v);\n        this.context.setProperty([name], v, true);\n    }\n}\n","import * as React from \"react\";\nimport { prefix } from \"../utils/utils\";\nimport TransformTab from \"./TransformTab\";\nimport Tab from \"./Tab\";\nimport FrameTab from \"./FrameTab/FrameTab\";\nimport AlignTab from \"./AlignTab/AlignTab\";\nimport LayerTab from \"./LayerTab/LayerTab\";\nimport CurrentTab from \"./ColorTab/ColorTab\";\nimport FontTab from \"./FontTab/FontTab\";\nimport styled, { StyledElement } from \"react-css-styled\";\n\nconst TabsElement = styled(\"div\", `\n{\n    position: absolute;\n    right: 0;\n    width: 40px;\n    height: 100%;\n    background: var(--back2);\n    z-index: 10;\n    transform: translateZ(10px);\n    box-sizing: border-box;\n    padding-top: 30px;\n    transition: width ease 0.2s;\n    text-align: left;\n}\n.scena-tab {\n    position: relative;\n    margin: 5px;\n}\n.scena-tab-icon {\n    position: relative;\n    position: relative;\n    color: #fff;\n    font-size: 11px;\n    font-weight: bold;\n    word-break: break-all;\n    padding: 5px;\n    width: 30px;\n    line-height: 20px;\n    height: 30px;\n    box-sizing: border-box;\n    border-radius: 3px;\n    text-align: left;\n    overflow: hidden;\n\n}\n.scena-tab-icon * {\n    pointer-events: none;\n}\n\n.scena-tab.scena-selected .scena-tab-icon {\n    background: var(--mainColor);\n}\n\n.scena-tab-popup {\n    position: absolute;\n    right: 100%;\n    top: 0;\n    transform: translate(-5px);\n    width: var(--tab);\n    padding: 0px 10px 10px;\n    background: var(--back2);\n    border-bottom: 1px solid var(--back1);\n    text-align: left;\n}\n\n.scena-tab-popup h2 {\n    margin: 0;\n    color: white;\n    font-weight: bold;\n    font-size: 14px;\n    padding: 8px 0px;\n}\n\n.scena-tab-line {\n    position: relative;\n    display: block;\n}\n\n`);\nconst TABS: Array<typeof Tab> = [\n    CurrentTab,\n    AlignTab,\n    FontTab,\n    LayerTab,\n    TransformTab,\n    FrameTab,\n];\nexport default class Tabs extends React.PureComponent {\n    public tabs = React.createRef<StyledElement>();\n    public state = {\n        selected: \"\",\n    }\n    public render() {\n        return <TabsElement className={prefix(\"tabs\")} ref={this.tabs} onMouseOver={this.onMouseOver} onMouseOut={this.blur}>\n            {this.renderTabs()}\n        </TabsElement>;\n    }\n    public renderTabs() {\n        const selected = this.state.selected;\n        return TABS.map(UserTab => {\n            const id = UserTab.id;\n            const isSelected = id === selected;\n            const IconComponent = UserTab.icon;\n            return <div key={id} className={prefix(\"tab\", isSelected ? \"selected\" : \"\")}>\n                <div data-target-id={id} className={prefix(\"tab-icon\")} onClick={this.onClick}>\n                    {IconComponent ? <IconComponent /> : <span>{id}</span>}\n                </div>\n                {isSelected && <UserTab />}\n            </div>;\n            // return <UserTab moveable={moveable} />;\n        });\n    }\n    public blur = () => {\n        this.tabs.current!.getElement().classList.remove(\"scena-over\");\n    }\n    private onClick = (e: any) => {\n        this.onMouseOver();\n        const target = e.target;\n        const prevSelected = this.state.selected;\n        const selected = target.getAttribute(\"data-target-id\");\n        this.setState({\n            selected: prevSelected === selected ? \"\" : selected,\n        });\n    }\n    private onMouseOver = () => {\n        this.tabs.current!.getElement().classList.add(\"scena-over\");\n    }\n}\n","import EventEmitter from \"@scena/event-emitter\";\nimport { IObject } from \"@daybrush/utils\";\n\nclass EventBus extends EventEmitter {\n    private eventMap: IObject<number> = {};\n    requestTrigger(name: string, params: IObject<any> = {}) {\n        const eventMap = this.eventMap;\n        cancelAnimationFrame(eventMap[name] || 0);\n\n        eventMap[name] = requestAnimationFrame(() => {\n            this.trigger(name, params);\n        });\n    }\n}\nexport default EventBus;\n","export default class Memory {\n    public map = new Map<any, any>();\n    public get(key: any) {\n        return this.map.get(key);\n    }\n    public set(key: any, value: any) {\n        return this.map.set(key, value);\n    }\n    public clear() {\n        this.map.clear();\n    }\n}\n","import * as React from \"react\";\nimport { MoveableManagerInterface } from \"react-moveable\";\n\nexport interface DimensionViewableProps {\n    dimensionViewable?: boolean;\n}\nexport const DimensionViewable = {\n    name: \"dimensionViewable\",\n    props: {\n        dimensionViewable: Boolean,\n    },\n    events: {},\n    render(moveable: MoveableManagerInterface) {\n        const zoom = moveable.props.zoom;\n        const rect = moveable.getRect();\n\n        return <div key={\"dimension-viewer\"} className={\"moveable-dimension\"} style={{\n            left: `${rect.width / 2}px`,\n            top: `${rect.height}px`,\n            transform: `translate(-50%, ${20 * zoom!}px) scale(${zoom})`,\n        }}>\n            {Math.round(rect.offsetWidth)} x {Math.round(rect.offsetHeight)}\n        </div>\n    }\n} as const;\n","// import * as React from \"react\";\nimport { MoveableManagerInterface, Renderer } from \"react-moveable\";\nimport { EditorContext } from \"../../consts\";\nimport Editor from \"../../Editor\";\n\nexport interface DelteButtonViewableProps {\n    deleteButtonViewable?: boolean;\n}\nexport const DelteButtonViewable = {\n    name: \"deleteButtonViewable\",\n    props: {\n        deleteButtonViewable: Boolean,\n    },\n    events: {},\n    render(moveable: MoveableManagerInterface, React: Renderer) {\n        const rect = moveable.getRect();\n        const { pos2 } = moveable.state;\n\n        const DeleteButton = moveable.useCSS(\n            \"div\",\n            `\n        {\n            position: absolute;\n            left: 0px;\n            top: 0px;\n            will-change: transform;\n            transform-origin: 0px 0px;\n            width: 24px;\n            height: 24px;\n            background: #4af;\n            background: var(--moveable-color);\n            opacity: 0.9;\n            border-radius: 4px;\n        }\n        :host:before, :host:after {\n            content: \"\";\n            position: absolute;\n            left: 50%;\n            top: 50%;\n            transform: translate(-50%, -50%) rotate(45deg);\n            width: 16px;\n            height: 2px;\n            background: #fff;\n            border-radius: 1px;\n            cursor: pointer;\n        }\n        :host:after {\n            transform: translate(-50%, -50%) rotate(-45deg);\n        }\n        `\n        );\n        return (\n            <EditorContext.Consumer key=\"delete-button-viewer\">\n                {(editor: Editor | null) => {\n                    return (\n                        <DeleteButton\n                            className={\"moveable-delete-button\"}\n                            onClick={() => {\n                                editor!.removeElements(editor!.getSelectedTargets());\n                            }}\n                            style={{\n                                transform: `translate(${pos2[0]}px, ${pos2[1]}px) rotate(${rect.rotation}deg) translate(10px)`,\n                            }}\n                        />\n                    );\n                }}\n            </EditorContext.Consumer>\n        );\n    },\n} as const;\n","import * as React from \"react\";\nimport Moveable, { MoveableManagerInterface } from \"react-moveable\";\nimport { getContentElement, getId } from \"../utils/utils\";\nimport Editor from \"../Editor\";\nimport { EditorInterface } from \"../types\";\nimport { IObject } from \"@daybrush/utils\";\nimport { diff } from \"@egjs/list-differ\";\nimport { connectEditorContext } from \"../decorators/ConnectEditorContext\";\nimport { DimensionViewableProps, DimensionViewable } from \"./ables/DimensionViewable\";\nimport { DelteButtonViewable, DelteButtonViewableProps } from \"./ables/DeleteButtonViewable\";\n\nfunction restoreRender(id: string, state: IObject<any>, prevState: IObject<any>, orders: any, editor: Editor) {\n    const el = editor.viewport.current!.getElement(id);\n\n    if (!el) {\n        console.error(\"No Element\");\n        return false;\n    }\n    const moveableData = editor.moveableData;\n    const frame = moveableData.getFrame(el);;\n\n    frame.clear();\n    frame.set(state);\n    frame.setOrderObject(orders);\n\n    const result = diff(Object.keys(prevState), Object.keys(state));\n    const { removed, prevList } = result;\n\n    removed.forEach(index => {\n        el.style.removeProperty(prevList[index]);\n    });\n    moveableData.render(el);\n    return true;\n}\nfunction undoRender({ id, prev, next, prevOrders }: IObject<any>, editor: Editor) {\n    if (!restoreRender(id, prev, next, prevOrders, editor)) {\n        return;\n    }\n    editor.moveableManager.current!.updateRect();\n    editor.eventBus.trigger(\"render\");\n}\nfunction redoRender({ id, prev, next, nextOrders }: IObject<any>, editor: Editor) {\n    if (!restoreRender(id, next, prev, nextOrders, editor)) {\n        return;\n    }\n    editor.moveableManager.current!.updateRect();\n    editor.eventBus.trigger(\"render\");\n}\nfunction undoRenders({ infos }: IObject<any>, editor: Editor) {\n    infos.forEach(({ id, prev, next, prevOrders }: IObject<any>) => {\n        restoreRender(id, prev, next, prevOrders, editor);\n    });\n    editor.moveableManager.current!.updateRect();\n    editor.eventBus.trigger(\"render\");\n}\nfunction redoRenders({ infos }: IObject<any>, editor: Editor) {\n    infos.forEach(({ id, next, prev, nextOrders }: IObject<any>) => {\n        restoreRender(id, next, prev, nextOrders, editor);\n    });\n    editor.moveableManager.current!.updateRect();\n    editor.eventBus.trigger(\"render\");\n}\n\n@connectEditorContext\nexport default class MoveableManager extends React.PureComponent<{\n    selectedTargets: Array<HTMLElement | SVGElement>;\n    selectedMenu: string,\n    verticalGuidelines: number[],\n    horizontalGuidelines: number[],\n    zoom: number,\n}> {\n    public moveable = React.createRef<Moveable>();\n    public getMoveable() {\n        return this.moveable.current!;\n    }\n    public render() {\n        const {\n            verticalGuidelines,\n            horizontalGuidelines,\n            selectedTargets,\n            selectedMenu,\n            zoom,\n        } = this.props;\n        // const\n\n        if (!selectedTargets.length) {\n            return this.renderViewportMoveable();\n        }\n        const moveableData = this.moveableData;\n        const memory = this.memory;\n        const elementGuidelines = [document.querySelector(\".scena-viewport\"), ...moveableData.getTargets()].filter(el => {\n            return selectedTargets.indexOf(el as any) === -1;\n        });\n\n        const isShift = this.keyManager.shiftKey;\n\n        return <Moveable<DimensionViewableProps & DelteButtonViewableProps>\n            ables={[DimensionViewable, DelteButtonViewable]}\n            ref={this.moveable}\n            targets={selectedTargets}\n            dimensionViewable={true}\n            deleteButtonViewable={true}\n            draggable={true}\n            resizable={true}\n            pinchable={[\"rotatable\"]}\n            zoom={1 / zoom}\n            throttleResize={1}\n            clippable={selectedMenu === \"Crop\"}\n            passDragArea={selectedMenu === \"Text\"}\n            checkInput={selectedMenu === \"Text\"}\n            throttleDragRotate={isShift ? 45 : 0}\n            keepRatio={selectedTargets.length > 1 ? true : isShift}\n            rotatable={true}\n            snappable={true}\n            snapCenter={true}\n            snapGap={false}\n            isDisplayInnerSnapDigit={true}\n            roundable={true}\n            verticalGuidelines={verticalGuidelines}\n            horizontalGuidelines={horizontalGuidelines}\n            elementGuidelines={elementGuidelines as any}\n            clipArea={true}\n            clipVerticalGuidelines={[0, \"50%\", \"100%\"]}\n            clipHorizontalGuidelines={[0, \"50%\", \"100%\"]}\n            clipTargetBounds={true}\n\n            onBeforeRenderStart={moveableData.onBeforeRenderStart}\n            onBeforeRenderGroupStart={moveableData.onBeforeRenderGroupStart}\n            onDragStart={moveableData.onDragStart}\n            onDrag={moveableData.onDrag}\n            onDragGroupStart={moveableData.onDragGroupStart}\n            onDragGroup={moveableData.onDragGroup}\n\n            onScaleStart={moveableData.onScaleStart}\n            onScale={moveableData.onScale}\n            onScaleGroupStart={moveableData.onScaleGroupStart}\n            onScaleGroup={moveableData.onScaleGroup}\n\n            onResizeStart={moveableData.onResizeStart}\n            onResize={moveableData.onResize}\n            onResizeGroupStart={moveableData.onResizeGroupStart}\n            onResizeGroup={moveableData.onResizeGroup}\n\n            onRotateStart={moveableData.onRotateStart}\n            onRotate={moveableData.onRotate}\n            onRotateGroupStart={moveableData.onRotateGroupStart}\n            onRotateGroup={moveableData.onRotateGroup}\n\n            defaultClipPath={memory.get(\"crop\") || \"inset\"}\n            onClip={moveableData.onClip}\n\n            onDragOriginStart={moveableData.onDragOriginStart}\n            onDragOrigin={e => {\n                moveableData.onDragOrigin(e);\n            }}\n\n            onRound={moveableData.onRound}\n\n            onClick={e => {\n                const target = e.inputTarget as any;\n\n                if (e.isDouble && target.isContentEditable) {\n                    this.selectMenu(\"Text\");\n                    const el = getContentElement(target);\n\n                    if (el) {\n                        el.focus();\n                    }\n                } else {\n                    this.getSelecto().clickTarget(e.inputEvent, e.inputTarget);\n                }\n            }}\n            onClickGroup={e => {\n                this.getSelecto().clickTarget(e.inputEvent, e.inputTarget);\n            }}\n            onRenderStart={e => {\n                e.datas.prevData = moveableData.getFrame(e.target).get();\n            }}\n            onRender={e => {\n                e.datas.isRender = true;\n                this.eventBus.requestTrigger(\"render\");\n            }}\n            onRenderEnd={e => {\n                this.eventBus.requestTrigger(\"render\");\n\n                if (!e.datas.isRender) {\n                    return;\n                }\n                this.historyManager.addAction(\"render\", {\n                    id: getId(e.target),\n                    prev: e.datas.prevData,\n                    next: moveableData.getFrame(e.target).get(),\n                });\n            }}\n            onRenderGroupStart={e => {\n                e.datas.prevDatas = e.targets.map(target => moveableData.getFrame(target).get());\n            }}\n            onRenderGroup={e => {\n                this.eventBus.requestTrigger(\"renderGroup\", e);\n                e.datas.isRender = true;\n            }}\n            onRenderGroupEnd={e => {\n                this.eventBus.requestTrigger(\"renderGroup\", e);\n\n                if (!e.datas.isRender) {\n                    return;\n                }\n                const prevDatas = e.datas.prevDatas;\n                const infos = e.targets.map((target, i) => {\n                    return {\n                        id: getId(target),\n                        prev: prevDatas[i],\n                        next: moveableData.getFrame(target).get(),\n                    }\n                });\n                this.historyManager.addAction(\"renders\", {\n                    infos,\n                });\n            }}\n        ></Moveable>\n    }\n    public renderViewportMoveable() {\n        const moveableData = this.moveableData;\n        const viewport = this.getViewport();\n        const target = viewport ? viewport.viewportRef.current! : null;\n\n        return <Moveable\n            ref={this.moveable}\n            // rotatable={true}\n            target={target}\n            origin={false}\n            onRotateStart={moveableData.onRotateStart}\n            onRotate={moveableData.onRotate}\n        ></Moveable>\n    }\n    public componentDidMount() {\n        this.historyManager.registerType(\"render\", undoRender, redoRender);\n        this.historyManager.registerType(\"renders\", undoRenders, redoRenders);\n        this.keyManager.keydown([\"shift\"], () => {\n            this.forceUpdate();\n        });\n        this.keyManager.keyup([\"shift\"], () => {\n            this.forceUpdate();\n        });\n    }\n    public updateRect() {\n        this.getMoveable().updateRect();\n    }\n}\nexport default interface MoveableManager extends EditorInterface { }\n","import MoveableHelper from \"moveable-helper\";\nimport Memory from \"./Memory\";\nimport { Frame, NameType } from \"scenejs\";\nimport { getId } from \"./utils\";\n\nexport default class MoveableData extends MoveableHelper {\n    public selectedTargets: Array<HTMLElement | SVGElement> = [];\n    constructor(private memory: Memory) {\n        super({\n            createAuto: true,\n            useBeforeRender: true,\n        });\n    }\n    public setSelectedTargets(targets: Array<HTMLElement | SVGElement>) {\n        this.selectedTargets = targets;\n    }\n    public getSelectedTargets() {\n        return this.selectedTargets;\n    }\n    public getSelectedFrames(): Frame[] {\n        return this.getSelectedTargets().map(target => this.getFrame(target));\n    }\n    public renderFrames() {\n        this.getSelectedTargets().forEach((target: any) => {\n            this.render(target);\n        });\n    }\n    public setOrders(scope: string[], orders: NameType[]) {\n        return this.setValue(frame => {\n            frame.setOrders(scope, orders);\n        });\n    }\n    public setProperty(names: string[], value: any) {\n        return this.setValue(frame => {\n            frame.set(...names, value);\n        });\n    }\n    public removeProperties(...names: string[]) {\n        return this.setValue((frame, target) => {\n            names.forEach(name => {\n                frame.remove(name);\n                target.style.removeProperty(name);\n            });\n        });\n    }\n    public getProperties(properties: string[][], defaultValues: any[]) {\n        const frames = this.getSelectedFrames();\n        const memory = this.memory;\n\n        if (!frames.length) {\n            return properties.map((property, i) => memory.get(property.join(\"///\")) || defaultValues[i]);\n        }\n\n        return properties.map((property, i) => {\n            const frameValues = frames.map(frame => frame.get(...property));\n\n            return frameValues.filter(color => color)[0] || defaultValues[i];\n        });\n    }\n    private setValue(callback: (frame: Frame, target: HTMLElement | SVGElement) => void) {\n        const targets = this.getSelectedTargets();\n\n        const infos = targets.map(target => {\n            const frame = this.getFrame(target);\n            const prevOrders = frame.getOrderObject();\n            const prev = frame.get();\n\n            callback(frame, target);\n            const next = frame.get();\n            const nextOrders = frame.getOrderObject();\n\n            return { id: getId(target), prev, prevOrders, next, nextOrders };\n\n        });\n        this.renderFrames();\n\n        return infos;\n    }\n\n}\n","import { IObject } from \"@daybrush/utils\";\nimport Editor from \"../Editor\";\n\nexport type RestoreCallback = (props: any, editor: Editor) => any;\nexport interface HistoryAction {\n    type: string;\n    props: IObject<any>;\n}\nexport default class HistoryManager {\n    private undoStack: HistoryAction[] = [];\n    private redoStack: HistoryAction[] = [];\n    private types: IObject<{ redo: RestoreCallback, undo: RestoreCallback }> = {};\n    constructor(private editor: Editor) { }\n    public registerType(type: string, undo: RestoreCallback, redo: RestoreCallback) {\n        this.types[type] = { undo, redo };\n    }\n    public addAction(type: string, props: IObject<any>) {\n        this.editor.console.log(`Add History:`, type, props);\n        this.undoStack.push({\n            type,\n            props,\n        });\n        this.redoStack = [];\n    }\n    public undo() {\n        const undoAction = this.undoStack.pop();\n\n        if (!undoAction) {\n            return;\n        }\n        this.editor.console.log(`Undo History: ${undoAction.type}`, undoAction.props);\n        this.types[undoAction.type].undo(undoAction.props, this.editor);\n        this.redoStack.push(undoAction);\n    }\n    public redo() {\n        const redoAction = this.redoStack.pop();\n\n        if (!redoAction) {\n            return;\n        }\n        this.editor.console.log(`Redo History: ${redoAction.type}`, redoAction.props);\n        this.types[redoAction.type].redo(redoAction.props, this.editor);\n        this.undoStack.push(redoAction);\n    }\n}\n","export default class Debugger {\n    constructor(private isDebug?: boolean) {}\n    public log(...args: any[]) {\n        if (!this.isDebug) {\n            return;\n        }\n        console.log(\"%c Scena Debugger:\", \"padding: 1px; background: #4af; color: #fff;\", ...args);\n    }\n}\n","import * as React from \"react\";\nimport { ClipboardItem, SavedScenaData } from \"../types\";\nimport Editor from \"../Editor\";\nimport { checkInput } from \"./utils\";\nimport html2canvas from \"html2canvas\";\nimport { TYPE_SCENA_LAYERS } from \"../consts\";\nimport MoveableGroup from \"react-moveable/declaration/MoveableGroup\";\n\n\nexport default class ClipboardManager {\n    constructor(private editor: Editor) {\n        document.addEventListener(\"cut\", this.onCut);\n        document.addEventListener(\"copy\", this.onCopy);\n        document.addEventListener(\"paste\", this.onPaste);\n    }\n    public destroy() {\n        document.removeEventListener(\"cut\", this.onCut);\n        document.removeEventListener(\"copy\", this.onCopy);\n        document.removeEventListener(\"paste\", this.onPaste);\n    }\n    public copy() {\n        document.execCommand(\"copy\");\n    }\n    public cut() {\n        document.execCommand(\"cut\");\n    }\n    public paste() {\n        document.execCommand(\"paste\");\n    }\n    public copyImage() {\n        const targets = this.editor.getSelectedTargets();\n        const moveable = this.editor.getMoveable();\n        const length = targets.length;\n        const moveables = length > 1 ? (moveable.moveable as MoveableGroup).moveables : [];\n\n        return new Promise(resolve => {\n            Promise.all(targets.map(target => html2canvas(target as HTMLElement))).then(images => {\n                let imageCanvas: HTMLCanvasElement;\n                if (length > 1) {\n                    const parentRect = moveable.getRect();\n                    const canvas = document.createElement(\"canvas\");\n                    canvas.width = parentRect.width;\n                    canvas.height = parentRect.height;\n                    const context = canvas.getContext(\"2d\")!;\n                    const rects = moveables.map(m => m.getRect());\n\n                    rects.forEach((rect, i) => {\n                        context.drawImage(images[i], rect.left - parentRect.left, rect.top - parentRect.top);\n                    });\n\n                    imageCanvas = canvas;\n                } else {\n                    imageCanvas = images[0];\n                }\n                imageCanvas.toBlob(blob => {\n                    (navigator.clipboard as any).write([\n                        new (window as any).ClipboardItem({\n                            \"image/png\": blob,\n                        }),\n                    ]);\n                    resolve();\n                });\n            });\n        });\n    }\n    private onCut = (e: any) => {\n        const copied = this.onCopy(e);\n\n        if (!copied) {\n            return;\n        }\n        this.editor.console.log(\"cut scena data\");\n        this.editor.removeElements(this.editor.getSelectedTargets());\n    }\n\n    private onCopy = async (e: any) => {\n        if (checkInput(e.target)) {\n            return false;\n        }\n        e.preventDefault();\n\n        const clipboardData = (e as any).clipboardData as DataTransfer;\n        const targets = this.editor.getSelectedTargets();\n        const SavedScenaData = this.editor.saveTargets(targets);\n\n        this.editor.console.log(\"copy scena data\", SavedScenaData);\n        clipboardData.setData(TYPE_SCENA_LAYERS, JSON.stringify(SavedScenaData));\n\n        return true;\n    }\n    private onPaste = (e: any) => {\n        if (checkInput(e.target)) {\n            return;\n        }\n\n        this.read((e as any).clipboardData);\n        e.preventDefault();\n    }\n    private readDataTransfter(data: DataTransfer) {\n        const types = data.types;\n        const hasScena = types.indexOf(TYPE_SCENA_LAYERS) > -1;\n\n        if (hasScena) {\n            const scenaDatas = JSON.parse(data.getData(TYPE_SCENA_LAYERS)) as SavedScenaData[];\n\n            this.editor.console.log(\"paste scena data\", scenaDatas);\n\n            this.editor.loadDatas(scenaDatas);\n            return true;\n        }\n        return false;\n    }\n    private async read(data: DataTransfer) {\n        if (this.readDataTransfter(data)) {\n            return true;\n        }\n        const clipboardItems: ClipboardItem[] = await (navigator.clipboard as any).read();\n\n        let hasText = false;\n        const isPaste = clipboardItems.filter(item => {\n            const types = item.types;\n\n            const hasImage = types.indexOf(\"image/png\") > -1;\n            hasText = hasText || types.indexOf(\"text/plain\") > -1;\n\n            if (hasImage) {\n                item.getType(\"image/png\").then(blob => {\n                    this.editor.appendBlob(blob);\n                });\n                return true;\n            }\n            return false;\n        }).length > 0;\n\n        if (!isPaste && hasText) {\n            const text = await navigator.clipboard.readText();\n\n            this.editor.appendJSXs([{\n                jsx: <div contentEditable=\"true\"></div>,\n                name: \"(Text)\",\n                innerText: text,\n            }]);\n        }\n    }\n}\n","import * as React from \"react\";\nimport InfiniteViewer from \"react-infinite-viewer\";\nimport Guides from \"@scena/react-guides\";\nimport Selecto, { Rect } from \"react-selecto\";\nimport styled, { StyledElement } from \"react-css-styled\";\nimport Menu from \"./Menu/Menu\";\nimport Viewport from \"./Viewport/Viewport\";\nimport { getContentElement, prefix, getIds, checkImageLoaded, checkInput, getParnetScenaElement, getScenaAttrs, setMoveMatrix, getOffsetOriginMatrix } from \"./utils/utils\";\nimport Tabs from \"./Tabs/Tabs\";\nimport EventBus from \"./utils/EventBus\";\nimport { IObject } from \"@daybrush/utils\";\nimport Memory from \"./utils/Memory\";\nimport MoveableManager from \"./Viewport/MoveableMananger\";\nimport MoveableData from \"./utils/MoveableData\";\nimport KeyManager from \"./KeyManager/KeyManager\";\nimport { ScenaEditorState, SavedScenaData, ScenaJSXElement, ElementInfo, MovedResult, MovedInfo, FrameInfo } from \"./types\";\nimport HistoryManager from \"./utils/HistoryManager\";\nimport Debugger from \"./utils/Debugger\";\nimport { DATA_SCENA_ELEMENT_ID, EditorContext, EDITOR_CSS } from \"./consts\";\nimport ClipboardManager from \"./utils/ClipboardManager\";\nimport { NameType } from \"scenejs\";\nimport { getAccurateAgent } from \"@egjs/agent\";\nimport { invert, matrix3d,  } from \"@scena/matrix\";\nimport { getElementInfo } from \"react-moveable\";\n\n\nconst EditorElement = styled(\"div\", EDITOR_CSS);\n\nfunction undoCreateElements({ infos, prevSelected }: IObject<any>, editor: Editor) {\n    const res = editor.removeByIds(infos.map((info: ElementInfo) => info.id), true);\n\n    if (prevSelected) {\n        res.then(() => {\n            editor.setSelectedTargets(editor.getViewport().getElements(prevSelected), true);\n        })\n    }\n}\nfunction restoreElements({ infos }: IObject<any>, editor: Editor) {\n    editor.appendJSXs(infos.map((info: ElementInfo) => ({\n        ...info,\n    })), true);\n}\nfunction undoSelectTargets({ prevs, nexts }: IObject<any>, editor: Editor) {\n    editor.setSelectedTargets(editor.viewport.current!.getElements(prevs), true);\n}\nfunction redoSelectTargets({ prevs, nexts }: IObject<any>, editor: Editor) {\n    editor.setSelectedTargets(editor.viewport.current!.getElements(nexts), true);\n}\nfunction undoChangeText({ prev, next, id }: IObject<any>, editor: Editor) {\n    const info = editor.getViewport().getInfo(id)!;\n    info.innerText = prev;\n    info.el!.innerText = prev;\n}\nfunction redoChangeText({ prev, next, id }: IObject<any>, editor: Editor) {\n    const info = editor.getViewport().getInfo(id)!;\n    info.innerText = next;\n    info.el!.innerText = next;\n}\nfunction undoMove({ prevInfos }: MovedResult, editor: Editor) {\n    editor.moves(prevInfos, true);\n}\nfunction redoMove({ nextInfos }: MovedResult, editor: Editor) {\n    editor.moves(nextInfos, true);\n}\nexport default class Editor extends React.PureComponent<{\n    width: number,\n    height: number,\n    debug?: boolean,\n}, Partial<ScenaEditorState>> {\n    public static defaultProps = {\n        width: 400,\n        height: 600,\n    };\n    public state: ScenaEditorState = {\n        selectedTargets: [],\n        horizontalGuides: [],\n        verticalGuides: [],\n        zoom: 1,\n        selectedMenu: \"MoveTool\",\n    };\n    public historyManager = new HistoryManager(this);\n    public console = new Debugger(this.props.debug);\n    public eventBus = new EventBus();\n    public memory = new Memory();\n    public moveableData = new MoveableData(this.memory);\n    public keyManager = new KeyManager(this.console);\n    public clipboardManager = new ClipboardManager(this);\n\n    public horizontalGuides = React.createRef<Guides>();\n    public verticalGuides = React.createRef<Guides>();\n    public infiniteViewer = React.createRef<InfiniteViewer>();\n    public selecto = React.createRef<Selecto>();\n    public menu = React.createRef<Menu>();\n    public moveableManager = React.createRef<MoveableManager>();\n    public viewport = React.createRef<Viewport>();\n    public tabs = React.createRef<Tabs>();\n    public editorElement = React.createRef<StyledElement<HTMLDivElement>>();\n\n    public render() {\n        return <EditorContext.Provider value={this}>\n            {this.renderChildren()}\n        </EditorContext.Provider>;\n    }\n    public renderChildren() {\n        const {\n            horizontalGuides,\n            verticalGuides,\n            infiniteViewer,\n            moveableManager,\n            viewport,\n            menu,\n            tabs,\n            selecto,\n            state,\n        } = this;\n        const {\n            selectedMenu,\n            selectedTargets,\n            zoom,\n        } = state;\n        const {\n            width,\n            height,\n        } = this.props;\n        const horizontalSnapGuides = state.horizontalGuides;\n        const verticalSnapGuides = state.verticalGuides;\n        let unit = 50;\n\n        if (zoom < 0.8) {\n            unit = Math.floor(1 / zoom) * 50;\n        }\n        return (\n            <EditorElement className={prefix(\"editor\")} ref={this.editorElement}>\n                <Tabs ref={tabs}></Tabs>\n                <Menu ref={menu} onSelect={this.onMenuChange} />\n                <div className={prefix(\"reset\")} onClick={e => {\n                    infiniteViewer.current!.scrollCenter();\n                }}></div>\n                <Guides ref={horizontalGuides}\n                    type=\"horizontal\" className={prefix(\"guides\", \"horizontal\")} style={{}}\n                    snapThreshold={5}\n                    snaps={horizontalSnapGuides}\n                    displayDragPos={true}\n                    dragPosFormat={v => `${v}px`}\n                    zoom={zoom}\n                    unit={unit}\n                    onChangeGuides={e => {\n                        this.setState({\n                            horizontalGuides: e.guides,\n                        });\n                    }}\n                ></Guides>\n                <Guides ref={verticalGuides}\n                    type=\"vertical\" className={prefix(\"guides\", \"vertical\")} style={{}}\n                    snapThreshold={5}\n                    snaps={verticalSnapGuides}\n                    displayDragPos={true}\n                    dragPosFormat={v => `${v}px`}\n                    zoom={zoom}\n                    unit={unit}\n                    onChangeGuides={e => {\n                        this.setState({\n                            verticalGuides: e.guides,\n                        });\n                    }}\n                ></Guides>\n                <InfiniteViewer ref={infiniteViewer}\n                    className={prefix(\"viewer\")}\n                    usePinch={true}\n                    useForceWheel={true}\n                    pinchThreshold={50}\n                    zoom={zoom}\n                    onDragStart={e => {\n                        const target = e.inputEvent.target;\n                        this.checkBlur();\n\n                        if (\n                            target.nodeName === \"A\"\n                            || moveableManager.current!.getMoveable().isMoveableElement(target)\n                            || moveableManager.current!.getMoveable().isDragging()\n                            || selectedTargets.some(t => t === target || t.contains(target))\n                        ) {\n                            e.stop();\n                        }\n                    }}\n                    onDragEnd={e => {\n                        if (!e.isDrag) {\n                            selecto.current!.clickTarget(e.inputEvent);\n                        }\n                    }}\n                    onAbortPinch={e => {\n                        selecto.current!.triggerDragStart(e.inputEvent);\n                    }}\n                    onScroll={e => {\n                        horizontalGuides.current!.scroll(e.scrollLeft);\n                        horizontalGuides.current!.scrollGuides(e.scrollTop);\n\n                        verticalGuides.current!.scroll(e.scrollTop);\n                        verticalGuides.current!.scrollGuides(e.scrollLeft);\n                    }}\n                    onPinch={e => {\n                        if (moveableManager.current!.getMoveable().isDragging()) {\n                            return;\n                        }\n                        this.setState({\n                            zoom: e.zoom,\n                        });\n                    }}\n                >\n                    <Viewport ref={viewport}\n                        onBlur={this.onBlur}\n                        style={{\n                            width: `${width}px`,\n                            height: `${height}px`,\n                        }}>\n                        <MoveableManager\n                            ref={moveableManager}\n                            selectedTargets={selectedTargets}\n                            selectedMenu={selectedMenu}\n                            verticalGuidelines={verticalSnapGuides}\n                            horizontalGuidelines={horizontalSnapGuides}\n                            zoom={zoom}\n                        ></MoveableManager>\n                    </Viewport>\n                </InfiniteViewer>\n                <Selecto\n                    ref={selecto}\n                    getElementRect={getElementInfo}\n                    dragContainer={\".scena-viewer\"}\n                    hitRate={0}\n                    selectableTargets={[`.scena-viewport [${DATA_SCENA_ELEMENT_ID}]`]}\n                    selectByClick={true}\n                    selectFromInside={false}\n                    toggleContinueSelect={[\"shift\"]}\n                    preventDefault={true}\n                    scrollOptions={\n                        infiniteViewer.current ? {\n                            container: infiniteViewer.current.getContainer(),\n                            threshold: 30,\n                            throttleTime: 30,\n                            getScrollPosition: () => {\n                                const current = infiniteViewer.current!;\n                                return [\n                                    current.getScrollLeft(),\n                                    current.getScrollTop(),\n                                ];\n                            },\n                        } : undefined\n                    }\n                    onDragStart={e => {\n                        const inputEvent = e.inputEvent;\n                        const target = inputEvent.target;\n\n                        this.checkBlur();\n                        if (selectedMenu === \"Text\" && target.isContentEditable) {\n                            const contentElement = getContentElement(target);\n\n                            if (contentElement && contentElement.hasAttribute(DATA_SCENA_ELEMENT_ID)) {\n                                e.stop();\n                                this.setSelectedTargets([contentElement]);\n                            }\n                        }\n                        if (\n                            (inputEvent.type === \"touchstart\" && e.isTrusted)\n                            || moveableManager.current!.getMoveable().isMoveableElement(target)\n                            || state.selectedTargets.some(t => t === target || t.contains(target))\n                        ) {\n                            e.stop();\n                        }\n                    }}\n                    onScroll={({ direction }) => {\n                        infiniteViewer.current!.scrollBy(direction[0] * 10, direction[1] * 10);\n                    }}\n                    onSelectEnd={({ isDragStart, selected, inputEvent, rect }) => {\n                        if (isDragStart) {\n                            inputEvent.preventDefault();\n                        }\n                        if (this.selectEndMaker(rect)) {\n                            return;\n                        }\n                        this.setSelectedTargets(selected).then(() => {\n                            if (!isDragStart) {\n                                return;\n                            }\n                            moveableManager.current!.getMoveable().dragStart(inputEvent);\n                        });\n                    }}\n                ></Selecto>\n            </EditorElement>\n        );\n    }\n    public async componentDidMount() {\n        const {\n            infiniteViewer,\n            memory,\n            eventBus,\n        } = this;\n        memory.set(\"background-color\", \"#4af\");\n        memory.set(\"color\", \"#333\");\n\n        requestAnimationFrame(() => {\n            this.verticalGuides.current!.resize();\n            this.horizontalGuides.current!.resize();\n            infiniteViewer.current!.scrollCenter();\n        });\n        window.addEventListener(\"resize\", this.onResize);\n        const viewport = this.getViewport();\n\n\n        eventBus.on(\"blur\", () => {\n            this.menu.current!.blur();\n            this.tabs.current!.blur();\n        });\n        eventBus.on(\"selectLayers\", (e: any) => {\n            const selected = e.selected as string[];\n\n            this.setSelectedTargets(selected.map(key => viewport.getInfo(key)!.el!));\n        });\n        eventBus.on(\"update\", () => {\n            this.forceUpdate();\n        });\n\n\n        this.keyManager.keydown([\"left\"], e => {\n            this.move(-10, 0);\n            e.inputEvent.preventDefault();\n        }, \"Move Left\");\n        this.keyManager.keydown([\"up\"], e => {\n            this.move(0, -10);\n            e.inputEvent.preventDefault();\n        }, \"Move Up\");\n        this.keyManager.keydown([\"right\"], e => {\n            this.move(10, 0);\n            e.inputEvent.preventDefault();\n        }, \"Move Right\");\n        this.keyManager.keydown([\"down\"], e => {\n            this.move(0, 10);\n            e.inputEvent.preventDefault();\n        }, \"Move Down\");\n        this.keyManager.keyup([\"backspace\"], () => {\n            this.removeElements(this.getSelectedTargets());\n        }, \"Delete\");\n\n        const agent = await getAccurateAgent()!;\n        const isMacintosh = agent.os.name === \"mac\" || agent.os.name === \"ios\";\n        this.keyManager.keydown([isMacintosh ? \"meta\" : \"ctrl\", \"x\"], () => { }, \"Cut\");\n        this.keyManager.keydown([isMacintosh ? \"meta\" : \"ctrl\", \"c\"], () => { }, \"Copy\");\n        // this.keyManager.keydown([isMacintosh ? \"meta\" : \"ctrl\", \"shift\", \"c\"], e => {\n        //     this.clipboardManager.copyImage();\n        //     e.inputEvent.preventDefault();\n        // }, \"Copy to Image\");\n        this.keyManager.keydown([isMacintosh ? \"meta\" : \"ctrl\", \"v\"], () => { }, \"Paste\");\n        this.keyManager.keydown([isMacintosh ? \"meta\" : \"ctrl\", \"z\"], () => {\n            this.historyManager.undo();\n        }, \"Undo\");\n        this.keyManager.keydown([isMacintosh ? \"meta\" : \"ctrl\", \"shift\", \"z\"], () => {\n            this.historyManager.redo();\n        }, \"Redo\");\n        this.keyManager.keydown([isMacintosh ? \"meta\" : \"ctrl\", \"a\"], e => {\n            this.setSelectedTargets(this.getViewportInfos().map(info => info.el!));\n            e.inputEvent.preventDefault();\n        }, \"Select All\");\n        this.keyManager.keydown([isMacintosh ? \"meta\" : \"ctrl\", \"alt\", \"g\"], e => {\n            e.inputEvent.preventDefault();\n            this.moveInside();\n        }, \"Move Inside\");\n        this.keyManager.keydown([isMacintosh ? \"meta\" : \"ctrl\", \"shift\", \"alt\", \"g\"], e => {\n            e.inputEvent.preventDefault();\n            this.moveOutside();\n        }, \"Move Outside\");\n        this.historyManager.registerType(\"createElements\", undoCreateElements, restoreElements);\n        this.historyManager.registerType(\"removeElements\", restoreElements, undoCreateElements);\n        this.historyManager.registerType(\"selectTargets\", undoSelectTargets, redoSelectTargets);\n        this.historyManager.registerType(\"changeText\", undoChangeText, redoChangeText);\n        this.historyManager.registerType(\"move\", undoMove, redoMove);\n    }\n    public componentWillUnmount() {\n        this.eventBus.off();\n        this.memory.clear();\n        this.moveableData.clear();\n        this.keyManager.destroy();\n        this.clipboardManager.destroy();\n        window.removeEventListener(\"resize\", this.onResize);\n    }\n    public promiseState(state: Partial<ScenaEditorState>) {\n        return new Promise<void>(resolve => {\n            this.setState(state, () => {\n                resolve();\n            });\n        });\n    }\n    public getSelecto = () => {\n        return this.selecto.current!;\n    }\n    public getViewport = () => {\n        return this.viewport.current!;\n    }\n    public getEditorElement = () => {\n        return this.editorElement.current!.getElement();\n    }\n    public getMoveable = () => {\n        return this.moveableManager.current!.getMoveable();\n    }\n    public getSelectedTargets = () => {\n        return this.state.selectedTargets;\n    }\n    public getSelectedFrames = () => {\n        return this.moveableData.getSelectedFrames();\n    }\n    public setSelectedTargets(targets: Array<HTMLElement | SVGElement>, isRestore?: boolean) {\n        targets = targets.filter(target => {\n            return targets.every(parnetTarget => {\n                return parnetTarget === target || !parnetTarget.contains(target);\n            });\n        });\n\n        return this.promiseState({\n            selectedTargets: targets,\n        }).then(() => {\n            if (!isRestore) {\n                const prevs = getIds(this.moveableData.getSelectedTargets());\n                const nexts = getIds(targets);\n\n                if (prevs.length !== nexts.length || !prevs.every((prev, i) => nexts[i] === prev)) {\n                    this.historyManager.addAction(\"selectTargets\", { prevs, nexts });\n                }\n            }\n            this.selecto.current!.setSelectedTargets(targets);\n            this.moveableData.setSelectedTargets(targets);\n            this.eventBus.trigger(\"setSelectedTargets\");\n            return targets;\n        });\n    }\n    public appendJSX(info: ElementInfo) {\n        return this.appendJSXs([info]).then(targets => targets[0]);\n    }\n\n    public appendJSXs(jsxs: ElementInfo[], isRestore?: boolean): Promise<Array<HTMLElement | SVGElement>> {\n        const viewport = this.getViewport();\n        const indexesList = viewport.getSortedIndexesList(this.getSelectedTargets());\n        const indexesListLength = indexesList.length;\n        let appendIndex = -1;\n        let scopeId: string = \"\";\n\n        if (!isRestore && indexesListLength) {\n            const indexes = indexesList[indexesListLength - 1];\n\n\n            const info = viewport.getInfoByIndexes(indexes);\n\n            scopeId = info.scopeId!;\n            appendIndex = indexes[indexes.length - 1] + 1;\n        }\n\n        this.console.log(\"append jsxs\", jsxs, appendIndex, scopeId);\n\n        return this.getViewport().appendJSXs(jsxs, appendIndex, scopeId).then(({ added }) => {\n            return this.appendComplete(added, isRestore);\n        });\n    }\n\n    public removeByIds(ids: string[], isRestore?: boolean) {\n        return this.removeElements(this.getViewport().getElements(ids), isRestore);\n    }\n    public removeFrames(targets: Array<HTMLElement | SVGElement>) {\n        const frameMap: IObject<{\n            frame: IObject<any>;\n            frameOrder: IObject<any>;\n        }> = {};\n        const moveableData = this.moveableData;\n        const viewport = this.getViewport();\n\n        targets.forEach(function removeFrame(target) {\n            const info = viewport.getInfoByElement(target)!;\n            const frame = moveableData.getFrame(target);\n            frameMap[info.id!] = {\n                frame: frame.get(),\n                frameOrder: frame.getOrderObject(),\n            };\n            moveableData.removeFrame(target);\n\n            info.children!.forEach(childInfo => {\n                removeFrame(childInfo.el!);\n            });\n        });\n\n        return frameMap;\n    }\n    public restoreFrames(infos: MovedInfo[], frameMap: IObject<FrameInfo>) {\n        const viewport = this.getViewport();\n        const moveableData = this.moveableData;\n\n        infos.map(({ info }) => info).forEach(function registerFrame(info: ElementInfo) {\n            info.frame = frameMap[info.id!].frame;\n            info.frameOrder = frameMap[info.id!].order;\n            delete frameMap[info.id!];\n\n            info.children!.forEach(registerFrame);\n        });\n\n        for (const id in frameMap) {\n            moveableData.createFrame(viewport.getInfo(id).el!, frameMap[id]);\n        }\n    }\n    public removeElements(targets: Array<HTMLElement | SVGElement>, isRestore?: boolean) {\n        const viewport = this.getViewport();\n        const frameMap = this.removeFrames(targets);\n        const indexesList = viewport.getSortedIndexesList(targets);\n        const indexesListLength = indexesList.length;\n        let scopeId = \"\";\n        let selectedInfo: ElementInfo | null = null;\n\n        if (indexesListLength) {\n            const lastInfo = viewport.getInfoByIndexes(indexesList[indexesListLength - 1]);\n            const nextInfo = viewport.getNextInfo(lastInfo.id!);\n\n            scopeId = lastInfo.scopeId!;\n            selectedInfo = nextInfo;\n        }\n        // return;\n        return viewport.removeTargets(targets).then(({ removed }) => {\n            let selectedTarget = selectedInfo || viewport.getLastChildInfo(scopeId)! || viewport.getInfo(scopeId);\n\n            this.setSelectedTargets(selectedTarget && selectedTarget.el ? [selectedTarget.el!] : [], true);\n\n            this.console.log(\"removeTargets\", removed);\n            !isRestore && this.historyManager.addAction(\"removeElements\", {\n                infos: removed.map(function removeTarget(info: ElementInfo): ElementInfo {\n                    return {\n                        ...info,\n                        children: info.children!.map(removeTarget),\n                        ...(frameMap[info.id!] || {}),\n                    };\n                }),\n            });\n            return targets;\n        });\n    }\n    public setProperty(scope: string[], value: any, isUpdate?: boolean) {\n        const infos = this.moveableData.setProperty(scope, value);\n\n        this.historyManager.addAction(\"renders\", { infos });\n\n        if (isUpdate) {\n            this.moveableManager.current!.updateRect();\n        }\n        this.eventBus.requestTrigger(\"render\");\n    }\n    public setOrders(scope: string[], orders: NameType[], isUpdate?: boolean) {\n        const infos = this.moveableData.setOrders(scope, orders);\n\n        this.historyManager.addAction(\"renders\", { infos });\n\n        if (isUpdate) {\n            this.moveableManager.current!.updateRect();\n        }\n        this.eventBus.requestTrigger(\"render\");\n    }\n    public selectMenu = (menu: string) => {\n        this.menu.current!.select(menu);\n    }\n    public loadDatas(datas: SavedScenaData[]) {\n        const viewport = this.getViewport();\n        return this.appendJSXs(datas.map(function loadData(data): any {\n            const { componentId, jsxId, children } = data;\n\n            let jsx!: ScenaJSXElement;\n\n            if (jsxId) {\n                jsx = viewport.getJSX(jsxId);\n            }\n            if (!jsx && componentId) {\n                const Component = viewport.getComponent(componentId);\n\n                jsx = <Component />;\n            }\n            if (!jsx) {\n                jsx = React.createElement(data.tagName);\n            }\n            return {\n                ...data,\n                children: children.map(loadData),\n                jsx,\n            };\n        }).filter(info => info) as ElementInfo[]);\n    }\n    public saveTargets(targets: Array<HTMLElement | SVGElement>): SavedScenaData[] {\n        const viewport = this.getViewport();\n        const moveableData = this.moveableData;\n        this.console.log(\"save targets\", targets);\n        return targets.map(target => viewport.getInfoByElement(target)).map(function saveTarget(info): SavedScenaData {\n            const target = info.el!;\n            const isContentEditable = info.attrs!.contenteditable;\n            return {\n                name: info.name,\n                attrs: getScenaAttrs(target),\n                jsxId: info.jsxId || \"\",\n                componentId: info.componentId!,\n                innerHTML: isContentEditable ? \"\" : target.innerHTML,\n                innerText: isContentEditable ? (target as HTMLElement).innerText : \"\",\n                tagName: target.tagName.toLowerCase(),\n                frame: moveableData.getFrame(target).get(),\n                children: info.children!.map(saveTarget),\n            };\n        });\n    }\n    public getViewportInfos() {\n        return this.getViewport().getViewportInfos();\n    }\n    public appendBlob(blob: Blob) {\n        const url = URL.createObjectURL(blob);\n\n        return this.appendJSX({\n            jsx: <img src={url} alt=\"appended blob\" />,\n            name: \"(Image)\",\n        });\n    }\n    public moves(movedInfos: MovedInfo[], isRestore?: boolean) {\n        const frameMap = this.removeFrames(movedInfos.map(({ info }) => info.el!));\n\n        return this.getViewport().moves(movedInfos).then(result => this.moveComplete(result, frameMap, isRestore));\n    }\n\n\n    private onMenuChange = (id: string) => {\n        this.setState({\n            selectedMenu: id,\n        });\n    }\n    private selectEndMaker(rect: Rect) {\n        const zoom = this.state.zoom;\n        const infiniteViewer = this.infiniteViewer.current!;\n        const selectIcon = this.menu.current!.getSelected();\n        const width = rect.width;\n        const height = rect.height;\n\n        if (!selectIcon || !selectIcon.maker || !width || !height) {\n            return false;\n        }\n        const maker = selectIcon.maker(this.memory);\n        const scrollTop = -infiniteViewer.getScrollTop() * zoom + 30;\n        const scrollLeft = -infiniteViewer.getScrollLeft() * zoom + 75;\n        const top = rect.top - scrollTop;\n        const left = rect.left - scrollLeft;\n\n        const style = {\n            top: `${top / zoom}px`,\n            left: `${left / zoom}px`,\n            position: \"absolute\",\n            width: `${width / zoom}px`,\n            height: `${height / zoom}px`,\n            ...maker.style,\n        } as any;\n        this.appendJSX({\n            jsx: maker.tag,\n            attrs: maker.attrs,\n            name: `(${selectIcon.id})`,\n            frame: style,\n        }).then(selectIcon.makeThen);\n        return true;\n    }\n    private move(deltaX: number, deltaY: number) {\n        this.getMoveable().request(\"draggable\", { deltaX, deltaY }, true);\n    }\n    private checkBlur() {\n        const activeElement = document.activeElement;\n        if (activeElement) {\n            (activeElement as HTMLElement).blur();\n        }\n        const selection = document.getSelection()!;\n\n        if (selection) {\n            selection.removeAllRanges();\n        }\n        this.eventBus.trigger(\"blur\");\n    }\n    private onResize = () => {\n        this.horizontalGuides.current!.resize();\n        this.verticalGuides.current!.resize();\n    }\n    private onBlur = (e: any) => {\n        const target = e.target as HTMLElement | SVGElement;\n\n        if (!checkInput(target)) {\n            return;\n        }\n        const parentTarget = getParnetScenaElement(target);\n\n        if (!parentTarget) {\n            return;\n        }\n        const info = this.getViewport().getInfoByElement(parentTarget)!;\n\n\n        if (!info.attrs!.contenteditable) {\n            return\n        }\n        const nextText = (parentTarget as HTMLElement).innerText;\n\n        if (info.innerText === nextText) {\n            return;\n        }\n        this.historyManager.addAction(\"changeText\", {\n            id: info.id,\n            prev: info.innerText,\n            next: nextText,\n        });\n        info.innerText = nextText;\n    }\n    private moveInside() {\n        let targets = this.getSelectedTargets();\n\n        const length = targets.length;\n        if (length !== 1) {\n            return;\n        }\n        targets = [targets[0]];\n\n\n        const viewport = this.getViewport();\n        const frameMap = this.removeFrames(targets);\n\n        return viewport.moveInside(targets[0]).then(result => this.moveComplete(result, frameMap));\n    }\n    private moveOutside() {\n        let targets = this.getSelectedTargets();\n\n        const length = targets.length;\n        if (length !== 1) {\n            return;\n        }\n        targets = [targets[0]];\n\n        const frameMap = this.removeFrames(targets);\n        this.getViewport().moveOutside(targets[0]).then(result => this.moveComplete(result, frameMap));\n\n    }\n    private appendComplete(infos: ElementInfo[], isRestore?: boolean) {\n        !isRestore && this.historyManager.addAction(\"createElements\", {\n            infos,\n            prevSelected: getIds(this.getSelectedTargets()),\n        });\n        const data = this.moveableData;\n        const container = this.getViewport().viewportRef.current!;\n        const targets = infos.map(function registerFrame(info) {\n            const frame = data.createFrame(info.el!, info.frame);\n\n            if (info.frameOrder) {\n                frame.setOrderObject(info.frameOrder);\n            }\n            data.render(info.el!);\n\n            info.children!.forEach(registerFrame);\n            return info.el!;\n        }).filter(el => el);\n        infos.forEach(info => {\n            if (!info.moveMatrix) {\n                return;\n            }\n            const frame = data.getFrame(info.el!);\n            let nextMatrix = getOffsetOriginMatrix(info.el!, container);\n\n            nextMatrix = invert(nextMatrix, 4);\n\n            const moveMatrix = matrix3d(nextMatrix, info.moveMatrix);\n\n            setMoveMatrix(frame, moveMatrix);\n            data.render(info.el!);\n        });\n        return Promise.all(targets.map(target => checkImageLoaded(target))).then(() => {\n            this.setSelectedTargets(targets, true);\n\n            return targets;\n        });\n    }\n    private moveComplete(result: MovedResult, frameMap: IObject<any>, isRestore?: boolean) {\n        this.console.log(\"Move\", result);\n\n        const { prevInfos, nextInfos } = result;\n\n        this.restoreFrames(nextInfos, frameMap);\n\n        if (nextInfos.length) {\n            if (!isRestore) {\n                this.historyManager.addAction(\"move\", {\n                    prevInfos,\n                    nextInfos,\n                });\n            }\n            // move complete\n            this.appendComplete(nextInfos.map(({ info, moveMatrix }) => {\n                return {\n                    ...info,\n                    moveMatrix,\n                };\n            }), true);\n        }\n\n        return result;\n    }\n}\n","import { prefixNames } from \"framework-utils\";\nimport { PREFIX, DATA_SCENA_ELEMENT_ID } from \"../consts\";\nimport { ScenaFunctionComponent, ScenaProps, ScenaComponent, ScenaJSXElement, ScenaFunctionJSXElement, ElementInfo } from \"../types\";\nimport { IObject, splitComma, isArray, isFunction, isObject } from \"@daybrush/utils\";\nimport { Frame } from \"scenejs\";\nimport { getElementInfo } from \"react-moveable\";\nimport { fromTranslation, matrix3d } from \"@scena/matrix\";\nimport React from \"react\";\n\n\nexport function prefix(...classNames: string[]) {\n    return prefixNames(PREFIX, ...classNames);\n}\nexport function getContentElement(el: HTMLElement): HTMLElement | null {\n    if (el.contentEditable === \"inherit\") {\n        return getContentElement(el.parentElement!);\n    }\n    if (el.contentEditable === \"true\") {\n        return el;\n    }\n    return null;\n}\n\nexport function between(val: number, min: number, max: number) {\n    return Math.min(Math.max(min, val), max);\n}\n\nexport function getId(el: HTMLElement | SVGElement) {\n    return el.getAttribute(DATA_SCENA_ELEMENT_ID)!;\n}\nexport function getIds(els: Array<HTMLElement | SVGElement>): string[] {\n    return els.map(el => getId(el));\n}\n\nexport function checkInput(target: HTMLElement | SVGElement) {\n    const tagName = target.tagName.toLowerCase();\n\n    return (target as HTMLElement).isContentEditable || tagName === \"input\" || tagName === \"textarea\";\n}\nexport function checkImageLoaded(el: HTMLElement | SVGElement): Promise<any> {\n    if (el.tagName.toLowerCase() !== \"img\") {\n        return Promise.all([].slice.call(el.querySelectorAll(\"img\")).map(el => checkImageLoaded(el)));\n    }\n    return new Promise(resolve => {\n        if ((el as HTMLImageElement).complete) {\n            resolve();\n        } else {\n            el.addEventListener(\"load\", function loaded() {\n                resolve();\n\n                el.removeEventListener(\"load\", loaded);\n            })\n        }\n    });\n}\n\nexport function getParnetScenaElement(el: HTMLElement | SVGElement): HTMLElement | SVGElement | null {\n    if (!el) {\n        return null;\n    }\n    if (el.hasAttribute(DATA_SCENA_ELEMENT_ID)) {\n        return el;\n    }\n    return getParnetScenaElement(el.parentElement as HTMLElement | SVGElement);\n}\n\nexport function makeScenaFunctionComponent<T = IObject<any>>(id: string, component: (props: ScenaProps & T) => React.ReactElement<any, any>): ScenaFunctionComponent<T> {\n    (component as ScenaFunctionComponent<T>).scenaComponentId = id;\n\n    return component as ScenaFunctionComponent<T>;\n}\n\nexport function getScenaAttrs(el: HTMLElement | SVGElement) {\n    const attributes = el.attributes;\n    const length = attributes.length;\n    const attrs: IObject<any> = {};\n\n    for (let i = 0; i < length; ++i) {\n        const { name, value } = attributes[i];\n\n        if (name === DATA_SCENA_ELEMENT_ID || name === \"style\") {\n            continue;\n        }\n        attrs[name] = value;\n    }\n\n    return attrs;\n}\n\nexport function isScenaFunction(value: any): value is ScenaComponent {\n    return isFunction(value) && \"scenaComponentId\" in value;\n}\n\nexport function isScenaElement(value: any): value is ScenaJSXElement {\n    return isObject(value) && !isScenaFunction(value);\n}\nexport function isScenaFunctionElement(value: any): value is ScenaFunctionJSXElement {\n    return isScenaElement(value) && isFunction(value.type);\n}\n\nexport function setMoveMatrix(frame: Frame, moveMatrix: number[]) {\n    const transformOrders = [...(frame.getOrders([\"transform\"]) || [])];\n\n    if (`${transformOrders[0]}`.indexOf(\"matrix3d\") > -1) {\n        const matrix = frame.get(\"transform\", transformOrders[0]);\n        const prevMatrix = isArray(matrix)\n            ? matrix\n            : splitComma(matrix).map(v => parseFloat(v));\n\n        frame.set(\"transform\", transformOrders[0], matrix3d(moveMatrix, prevMatrix));\n    } else if (frame.has(\"transform\", \"matrix3d\")) {\n        let num = 1;\n        while (frame.has(\"transform\", `matrix3d${++num}`)) { }\n\n        frame.set(\"transform\", `matrix3d${num}`, [...moveMatrix]);\n        frame.setOrders([\"transform\"], [`matrix3d${num}`, ...transformOrders]);\n    } else {\n        frame.set(\"transform\", \"matrix3d\", [...moveMatrix]);\n        frame.setOrders([\"transform\"], [\"matrix3d\", ...transformOrders]);\n    }\n}\n\nexport function getOffsetOriginMatrix(el: HTMLElement | SVGElement, container: HTMLElement) {\n    const stack = getElementInfo(el, container);\n    const origin = stack.targetOrigin;\n    const translation = fromTranslation([origin[0], origin[1], origin[2] || 0], 4);\n\n    return matrix3d(stack.offsetMatrix as any, translation);\n}\n\nexport function updateElements(infos: ElementInfo[]) {\n    return infos.map(function registerElement(info) {\n        const id = info.id!;\n\n        const target = document.querySelector<HTMLElement>(`[${DATA_SCENA_ELEMENT_ID}=\"${id}\"]`)!;\n        const attrs = info.attrs || {};\n\n        info.el = target;\n\n        for (const name in attrs) {\n            target.setAttribute(name, attrs[name]);\n        }\n        info.attrs = getScenaAttrs(target);\n        const children = info.children || [];\n\n        if (children.length) {\n            children.forEach(registerElement);\n        } else if (info.attrs!.contenteditable) {\n            if (\"innerText\" in info) {\n                (target as HTMLElement).innerText = info.innerText || \"\";\n            } else {\n                info.innerText = (target as HTMLElement).innerText || \"\";\n            }\n        } else if (!info.componentId) {\n            if (\"innerHTML\" in info) {\n                target.innerHTML = info.innerHTML || \"\";\n            } else {\n                info.innerHTML = target.innerHTML || \"\";\n            }\n        }\n        return { ...info };\n    });\n}\n","import * as React from \"react\";\nimport \"./App.css\";\nimport { ScenaProps } from \"../Editor/types\";\nimport Editor, { makeScenaFunctionComponent } from \"../Editor\";\n\nconst Badge = makeScenaFunctionComponent(\"Badge\", function Badge(props: ScenaProps) {\n    return <p className=\"badges\" data-scena-element-id={props.scenaElementId}>\n        <a href=\"https://www.npmjs.com/package/moveable\" target=\"_blank\">\n            <img src=\"https://img.shields.io/npm/v/moveable.svg?style=flat-square&amp;color=007acc&amp;label=version\" alt=\"npm version\" /></a>\n        <a href=\"https://github.com/daybrush/moveable\" target=\"_blank\">\n            <img src=\"https://img.shields.io/github/stars/daybrush/moveable.svg?color=42b883&amp;style=flat-square\" /></a>\n        <a href=\"https://github.com/daybrush/moveable\" target=\"_blank\">\n            <img src=\"https://img.shields.io/badge/language-typescript-blue.svg?style=flat-square\" />\n        </a>\n        <br />\n        <a href=\"https://github.com/daybrush/moveable/tree/master/packages/react-moveable\" target=\"_blank\"><img alt=\"React\" src=\"https://img.shields.io/static/v1.svg?label=&amp;message=React&amp;style=flat-square&amp;color=61daeb\" /></a>\n        <a href=\"https://github.com/daybrush/moveable/tree/master/packages/preact-moveable\" target=\"_blank\"><img alt=\"Preact\" src=\"https://img.shields.io/static/v1.svg?label=&amp;message=Preact&amp;style=flat-square&amp;color=673ab8\" /></a>\n        <a href=\"https://github.com/daybrush/moveable/tree/master/packages/ngx-moveable\" target=\"_blank\"><img alt=\"Angular\" src=\"https://img.shields.io/static/v1.svg?label=&amp;message=Angular&amp;style=flat-square&amp;color=C82B38\" /></a>\n        <a href=\"https://github.com/probil/vue-moveable\" target=\"_blank\"><img alt=\"Vue\" src=\"https://img.shields.io/static/v1.svg?label=&amp;message=Vue&amp;style=flat-square&amp;color=3fb984\" /></a>\n        <a href=\"https://github.com/daybrush/moveable/tree/master/packages/svelte-moveable\" target=\"_blank\"><img alt=\"Svelte\" src=\"https://img.shields.io/static/v1.svg?label=&amp;message=Svelte&amp;style=flat-square&amp;color=C82B38\" /></a>\n    </p>;\n});\n\nclass App extends React.Component {\n    public editor = React.createRef<Editor>();\n    public render() {\n        return <div className=\"app\">\n            <Editor\n                ref={this.editor}\n                debug={false}\n            />\n            <div className=\"bottom\">\n                <a href=\"https://github.com/daybrush/moveable\" target=\"_blank\">Download</a>\n                <a href=\"https://daybrush.com/moveable/release/latest/doc\" target=\"_blank\">API</a>\n                <a href=\"https://daybrush.com/moveable/storybook\" target=\"_blank\">Storybook</a>\n            </div>\n        </div>;\n    }\n    public componentDidMount() {\n        // (window as any).a = this;\n        this.editor.current!.appendJSXs([\n            {\n                jsx: <div className=\"moveable\" contentEditable=\"true\" suppressContentEditableWarning={true}>Moveable</div>,\n                name: \"(Logo)\",\n                frame: {\n                    position: \"absolute\",\n                    left: \"50%\",\n                    top: \"30%\",\n                    width: \"250px\",\n                    height: \"200px\",\n                    \"font-size\": \"40px\",\n                    \"transform\": \"translate(-125px, -100px)\",\n                    display: \"flex\",\n                    \"justify-content\": \"center\",\n                    \"flex-direction\": \"column\",\n                    \"text-align\": \"center\",\n                    \"font-weight\": 100,\n                },\n            },\n            {\n                jsx: <Badge />,\n                name: \"(Badges)\",\n                frame: {\n                    position: \"absolute\",\n                    left: \"0%\",\n                    top: \"50%\",\n                    width: \"100%\",\n                    \"text-align\": \"center\",\n                },\n            },\n            {\n                jsx: <div className=\"moveable\" contentEditable=\"true\" suppressContentEditableWarning={true}>Moveable is Draggable! Resizable! Scalable! Rotatable! Warpable! Pinchable</div>,\n                name: \"(Description)\",\n                frame: {\n                    position: \"absolute\",\n                    left: \"0%\",\n                    top: \"65%\",\n                    width: \"100%\",\n                    \"font-size\": \"14px\",\n                    \"text-align\": \"center\",\n                    \"font-weight\": \"normal\",\n                },\n            },\n        ], true).then(targets => {\n            this.editor.current!.setSelectedTargets([targets[0]], true);\n        });\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import App from './demo/Scena';\nimport App from './demo/Moveable';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />\n  ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n","import Editor from \"./Editor\";\n\nexport default Editor;\nexport { makeScenaFunctionComponent } from \"./utils/utils\";\nexport * from \"./types\";\n"],"sourceRoot":""}